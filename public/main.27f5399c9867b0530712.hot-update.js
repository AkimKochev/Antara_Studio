/*! For license information please see main.27f5399c9867b0530712.hot-update.js.LICENSE.txt */
self.webpackHotUpdateAntara_Studio("main",{"./styles/index.scss":()=>{throw new Error("Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\nHookWebpackError: Cannot find module '../../static/fonts/Karla-Light.ttf'\n    at tryRunOrWebpackError (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\HookWebpackError.js:88:9)\n    at __webpack_require_module__ (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5051:12)\n    at __webpack_require__ (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5008:18)\n    at C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5079:20\n    at symbolIterator (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\neo-async\\async.js:3485:9)\n    at done (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\neo-async\\async.js:3527:9)\n    at Hook.eval [as callAsync] (eval at create (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\tapable\\lib\\HookCodeFactory.js:33:10), <anonymous>:15:1)\n    at C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:4986:43\n    at symbolIterator (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\neo-async\\async.js:3482:9)\n    at timesSync (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\neo-async\\async.js:2297:7)\n-- inner error --\nError: Cannot find module '../../static/fonts/Karla-Light.ttf'\n    at webpackMissingModule (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\css-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\postcss-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\sass-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\styles\\index.scss:15:113)\n    at Module.<anonymous> (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\css-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\postcss-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\sass-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\styles\\index.scss:15:222)\n    at C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\javascript\\JavascriptModulesPlugin.js:441:11\n    at Hook.eval [as call] (eval at create (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\tapable\\lib\\HookCodeFactory.js:19:10), <anonymous>:7:1)\n    at C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5053:39\n    at tryRunOrWebpackError (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\HookWebpackError.js:83:7)\n    at __webpack_require_module__ (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5051:12)\n    at __webpack_require__ (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5008:18)\n    at C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\webpack\\lib\\Compilation.js:5079:20\n    at symbolIterator (C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\neo-async\\async.js:3485:9)\n\nGenerated code for C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\css-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\postcss-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\node_modules\\sass-loader\\dist\\cjs.js!C:\\Users\\akimk\\Desktop\\ANTARA.STUDIO\\styles\\index.scss\n 1 | __webpack_require__.r(__webpack_exports__);\n 2 | /* harmony export */ __webpack_require__.d(__webpack_exports__, {\n 3 | /* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n 4 | /* harmony export */ });\n 5 | /* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"C:\\\\Users\\\\akimk\\\\Desktop\\\\ANTARA.STUDIO\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!C:\\\\Users\\\\akimk\\\\Desktop\\\\ANTARA.STUDIO\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\sourceMaps.js\");\n 6 | /* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n 7 | /* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"C:\\\\Users\\\\akimk\\\\Desktop\\\\ANTARA.STUDIO\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!C:\\\\Users\\\\akimk\\\\Desktop\\\\ANTARA.STUDIO\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\n 8 | /* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n 9 | /* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"C:\\\\Users\\\\akimk\\\\Desktop\\\\ANTARA.STUDIO\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!C:\\\\Users\\\\akimk\\\\Desktop\\\\ANTARA.STUDIO\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\getUrl.js\");\n10 | /* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n11 | // Imports\n12 | \n13 | \n14 | \n15 | var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../static/fonts/Karla-Light.ttf'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), __webpack_require__.b);\n16 | var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../../static/fonts/NotoSerifDisplay-Light.ttf'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), __webpack_require__.b);\n17 | var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n18 | var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\n19 | var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);\n20 | // Module\n21 | ___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody,\\ndiv,\\nspan,\\napplet,\\nobject,\\niframe,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\np,\\nblockquote,\\npre,\\na,\\nabbr,\\nacronym,\\naddress,\\nbig,\\ncite,\\ncode,\\ndel,\\ndfn,\\nem,\\nimg,\\nins,\\nkbd,\\nq,\\ns,\\nsamp,\\nsmall,\\nstrike,\\nstrong,\\nsub,\\nsup,\\ntt,\\nvar,\\nb,\\nu,\\ni,\\ncenter,\\ndl,\\ndt,\\ndd,\\nol,\\nul,\\nli,\\nfieldset,\\nform,\\nlabel,\\nlegend,\\ntable,\\ncaption,\\ntbody,\\ntfoot,\\nthead,\\ntr,\\nth,\\ntd,\\narticle,\\naside,\\ncanvas,\\ndetails,\\nembed,\\nfigure,\\nfigcaption,\\nfooter,\\nheader,\\nhgroup,\\nmenu,\\nnav,\\noutput,\\nruby,\\nsection,\\nsummary,\\ntime,\\nmark,\\naudio,\\nvideo {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 100%;\\n  font: inherit;\\n  vertical-align: baseline;\\n}\\n\\narticle,\\naside,\\ndetails,\\nfigcaption,\\nfigure,\\nfooter,\\nheader,\\nhgroup,\\nmenu,\\nnav,\\nsection {\\n  display: block;\\n}\\n\\nbody {\\n  line-height: 1;\\n}\\n\\nol,\\nul {\\n  list-style: none;\\n}\\n\\nblockquote,\\nq {\\n  quotes: none;\\n}\\n\\nblockquote:before,\\nblockquote:after,\\nq:before,\\nq:after {\\n  content: \\\"\\\";\\n  content: none;\\n}\\n\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n\\nspan {\\n  font-size: 1.3rem;\\n  line-height: 1.29;\\n}\\n@media (max-width: 767px) {\\n  span {\\n    font-size: 1.3rem;\\n  }\\n}\\n\\np,\\na {\\n  font-size: 1.9rem;\\n  line-height: 1.28;\\n}\\n@media (max-width: 767px) {\\n  p,\\na {\\n    font-size: 1.3rem;\\n  }\\n}\\n\\nh1 {\\n  font-size: 15rem;\\n  line-height: 1.04;\\n}\\n@media (max-width: 767px) {\\n  h1 {\\n    font-size: 5.5rem;\\n  }\\n}\\n\\nh2 {\\n  font-size: 5.7rem;\\n  line-height: 1.04;\\n}\\n@media (max-width: 767px) {\\n  h2 {\\n    font-size: 2.5rem;\\n  }\\n}\\n\\nh3,\\nh4 {\\n  font-size: 2.8rem;\\n  line-height: 1.04;\\n}\\n@media (max-width: 767px) {\\n  h3,\\nh4 {\\n    font-size: 1.8rem;\\n  }\\n}\\n\\n@font-face {\\n  font-family: \\\"Noto Sans\\\";\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n  font-weight: normal;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n@font-face {\\n  font-family: \\\"Kara\\\";\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n  font-weight: normal;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nhtml {\\n  font-size: 0.6944444444vw;\\n  line-height: 1;\\n  overflow: hidden;\\n  position: fixed;\\n  text-rendering: optimizeLegibility;\\n}\\n\\nhtml,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\nh1 {\\n  font-family: \\\"Noto Sans\\\";\\n}\\n\\nh2 {\\n  font-family: \\\"Noto Sans\\\";\\n}\\n\\nh3,\\nh4 {\\n  font-family: \\\"Noto Sans\\\";\\n}\\n\\np,\\na {\\n  font-family: \\\"Kara\\\";\\n}\\n\\nspan {\\n  font-family: \\\"Kara\\\";\\n}\\n\\n.navigation {\\n  display: flex;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./styles/base/reset.scss\",\"webpack://./styles/index.scss\",\"webpack://./styles/shared/description.scss\",\"webpack://./node_modules/include-media/dist/_include-media.scss\",\"webpack://./styles/shared/titles.scss\",\"webpack://./styles/base/fonts.scss\",\"webpack://./styles/utils/variables.scss\",\"webpack://./styles/base/global.scss\",\"webpack://./styles/components/navigation.scss\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFI,SAAA;EACA,UAAA;EACA,SAAA;EACA,eAAA;EACA,aAAA;EACA,wBAAA;ACCJ;;ADEA;;;;;;;;;;;EAWI,cAAA;ACCJ;;ADEA;EACI,cAAA;ACCJ;;ADEA;;EAEI,gBAAA;ACCJ;;ADEA;;EAEI,YAAA;ACCJ;;ADEA;;;;EAII,WAAA;EACA,aAAA;ACCJ;;ADEA;EACI,yBAAA;EACA,iBAAA;ACCJ;;AC9HA;EACC,iBAAA;EACA,iBAAA;ADiID;AEwaI;ED3iBJ;IAKE,iBAAA;EDkIA;AACF;;AC/HA;;EACC,iBAAA;EACA,iBAAA;ADmID;AE6ZI;EDliBJ;;IAKE,iBAAA;EDqIA;AACF;;AGpJA;EACC,gBAAA;EACA,iBAAA;AHuJD;AEkZI;EC3iBJ;IAKE,iBAAA;EHwJA;AACF;;AGrJA;EACC,iBAAA;EACA,iBAAA;AHwJD;AEwYI;ECliBJ;IAKE,iBAAA;EHyJA;AACF;;AGtJA;;EACC,iBAAA;EACA,iBAAA;AH0JD;AE6XI;ECzhBJ;;IAKE,iBAAA;EH4JA;AACF;;AIpLA;EACC,wBCHgB;EDIhB,4CAAA;EACA,mBAAA;EACC,kBAAA;EACA,kBAAA;AJuLF;AIpLA;EACC,mBCVW;EDWX,4CAAA;EACA,mBAAA;EACC,kBAAA;EACA,kBAAA;AJsLF;AM/LA;EACC,SAAA;EACA,UAAA;EACA,sBAAA;ANiMD;;AM9LA;EACC,yBAAA;EACA,cAAA;EACA,gBAAA;EACA,eAAA;EACA,kCAAA;ANiMD;;AM9LA;;EAEC,YAAA;EACA,WAAA;ANiMD;;AM9LA;EACC,wBD3BgB;AL4NjB;;AM7LA;EACC,wBDhCgB;ALgOjB;;AM5LA;;EAEC,wBDtCgB;ALqOjB;;AM3LA;;EAEC,mBD3CW;ALyOZ;;AM1LA;EACC,mBDhDW;AL6OZ;;AO9OA;EACC,aAAA;EACA,eAAA;EACA,MAAA;EACA,OAAA;EACA,WAAA;APiPD\",\"sourcesContent\":[\"html,\\r\\nbody,\\r\\ndiv,\\r\\nspan,\\r\\napplet,\\r\\nobject,\\r\\niframe,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4,\\r\\nh5,\\r\\nh6,\\r\\np,\\r\\nblockquote,\\r\\npre,\\r\\na,\\r\\nabbr,\\r\\nacronym,\\r\\naddress,\\r\\nbig,\\r\\ncite,\\r\\ncode,\\r\\ndel,\\r\\ndfn,\\r\\nem,\\r\\nimg,\\r\\nins,\\r\\nkbd,\\r\\nq,\\r\\ns,\\r\\nsamp,\\r\\nsmall,\\r\\nstrike,\\r\\nstrong,\\r\\nsub,\\r\\nsup,\\r\\ntt,\\r\\nvar,\\r\\nb,\\r\\nu,\\r\\ni,\\r\\ncenter,\\r\\ndl,\\r\\ndt,\\r\\ndd,\\r\\nol,\\r\\nul,\\r\\nli,\\r\\nfieldset,\\r\\nform,\\r\\nlabel,\\r\\nlegend,\\r\\ntable,\\r\\ncaption,\\r\\ntbody,\\r\\ntfoot,\\r\\nthead,\\r\\ntr,\\r\\nth,\\r\\ntd,\\r\\narticle,\\r\\naside,\\r\\ncanvas,\\r\\ndetails,\\r\\nembed,\\r\\nfigure,\\r\\nfigcaption,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\noutput,\\r\\nruby,\\r\\nsection,\\r\\nsummary,\\r\\ntime,\\r\\nmark,\\r\\naudio,\\r\\nvideo {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    border: 0;\\r\\n    font-size: 100%;\\r\\n    font: inherit;\\r\\n    vertical-align: baseline;\\r\\n}\\r\\n\\r\\narticle,\\r\\naside,\\r\\ndetails,\\r\\nfigcaption,\\r\\nfigure,\\r\\nfooter,\\r\\nheader,\\r\\nhgroup,\\r\\nmenu,\\r\\nnav,\\r\\nsection {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    line-height: 1;\\r\\n}\\r\\n\\r\\nol,\\r\\nul {\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\nblockquote,\\r\\nq {\\r\\n    quotes: none;\\r\\n}\\r\\n\\r\\nblockquote:before,\\r\\nblockquote:after,\\r\\nq:before,\\r\\nq:after {\\r\\n    content: \\\"\\\";\\r\\n    content: none;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    border-collapse: collapse;\\r\\n    border-spacing: 0;\\r\\n}\\r\\n\",\"html,\\nbody,\\ndiv,\\nspan,\\napplet,\\nobject,\\niframe,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\np,\\nblockquote,\\npre,\\na,\\nabbr,\\nacronym,\\naddress,\\nbig,\\ncite,\\ncode,\\ndel,\\ndfn,\\nem,\\nimg,\\nins,\\nkbd,\\nq,\\ns,\\nsamp,\\nsmall,\\nstrike,\\nstrong,\\nsub,\\nsup,\\ntt,\\nvar,\\nb,\\nu,\\ni,\\ncenter,\\ndl,\\ndt,\\ndd,\\nol,\\nul,\\nli,\\nfieldset,\\nform,\\nlabel,\\nlegend,\\ntable,\\ncaption,\\ntbody,\\ntfoot,\\nthead,\\ntr,\\nth,\\ntd,\\narticle,\\naside,\\ncanvas,\\ndetails,\\nembed,\\nfigure,\\nfigcaption,\\nfooter,\\nheader,\\nhgroup,\\nmenu,\\nnav,\\noutput,\\nruby,\\nsection,\\nsummary,\\ntime,\\nmark,\\naudio,\\nvideo {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 100%;\\n  font: inherit;\\n  vertical-align: baseline;\\n}\\n\\narticle,\\naside,\\ndetails,\\nfigcaption,\\nfigure,\\nfooter,\\nheader,\\nhgroup,\\nmenu,\\nnav,\\nsection {\\n  display: block;\\n}\\n\\nbody {\\n  line-height: 1;\\n}\\n\\nol,\\nul {\\n  list-style: none;\\n}\\n\\nblockquote,\\nq {\\n  quotes: none;\\n}\\n\\nblockquote:before,\\nblockquote:after,\\nq:before,\\nq:after {\\n  content: \\\"\\\";\\n  content: none;\\n}\\n\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n\\nspan {\\n  font-size: 1.3rem;\\n  line-height: 1.29;\\n}\\n@media (max-width: 767px) {\\n  span {\\n    font-size: 1.3rem;\\n  }\\n}\\n\\np,\\na {\\n  font-size: 1.9rem;\\n  line-height: 1.28;\\n}\\n@media (max-width: 767px) {\\n  p,\\na {\\n    font-size: 1.3rem;\\n  }\\n}\\n\\nh1 {\\n  font-size: 15rem;\\n  line-height: 1.04;\\n}\\n@media (max-width: 767px) {\\n  h1 {\\n    font-size: 5.5rem;\\n  }\\n}\\n\\nh2 {\\n  font-size: 5.7rem;\\n  line-height: 1.04;\\n}\\n@media (max-width: 767px) {\\n  h2 {\\n    font-size: 2.5rem;\\n  }\\n}\\n\\nh3,\\nh4 {\\n  font-size: 2.8rem;\\n  line-height: 1.04;\\n}\\n@media (max-width: 767px) {\\n  h3,\\nh4 {\\n    font-size: 1.8rem;\\n  }\\n}\\n\\n@font-face {\\n  font-family: \\\"Noto Sans\\\";\\n  src: url(\\\"../../static/fonts/Karla-Light.ttf\\\");\\n  font-weight: normal;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n@font-face {\\n  font-family: \\\"Kara\\\";\\n  src: url(\\\"../../static/fonts/NotoSerifDisplay-Light.ttf\\\");\\n  font-weight: normal;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n* {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nhtml {\\n  font-size: 0.6944444444vw;\\n  line-height: 1;\\n  overflow: hidden;\\n  position: fixed;\\n  text-rendering: optimizeLegibility;\\n}\\n\\nhtml,\\nbody {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\nh1 {\\n  font-family: \\\"Noto Sans\\\";\\n}\\n\\nh2 {\\n  font-family: \\\"Noto Sans\\\";\\n}\\n\\nh3,\\nh4 {\\n  font-family: \\\"Noto Sans\\\";\\n}\\n\\np,\\na {\\n  font-family: \\\"Kara\\\";\\n}\\n\\nspan {\\n  font-family: \\\"Kara\\\";\\n}\\n\\n.navigation {\\n  display: flex;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n}\",\"@use '../utils/responsive.scss' as *;\\n\\n%description-13 {\\n\\tfont-size: 1.3rem;\\n\\tline-height: 1.29;\\n\\n\\t@include media('<phone') {\\n\\t\\tfont-size: 1.3rem;\\n\\t}\\n}\\n\\n%description-19 {\\n\\tfont-size: 1.9rem;\\n\\tline-height: 1.28;\\n\\n\\t@include media('<phone') {\\n\\t\\tfont-size: 1.3rem;\\n\\t}\\n}\\n\",\"@charset \\\"UTF-8\\\";\\n\\n//     _            _           _                           _ _\\n//    (_)          | |         | |                         | (_)\\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\\n//    | | '_ \\\\ / __| | | | |/ _` |/ _ \\\\ | '_ ` _ \\\\ / _ \\\\/ _` | |/ _` |\\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\\n//    |_|_| |_|\\\\___|_|\\\\__,_|\\\\__,_|\\\\___| |_| |_| |_|\\\\___|\\\\__,_|_|\\\\__,_|\\n//\\n//      Simple, elegant and maintainable media queries in Sass\\n//                        v1.4.9\\n//\\n//        https://eduardoboucas.github.io/include-media\\n//\\n//         Authors: Eduardo Boucas (@eduardoboucas)\\n//                  Kitty Giraudel (@kittygiraudel)\\n//\\n//      This project is licensed under the terms of the MIT license\\n////\\n/// include-media library public configuration\\n/// @author Eduardo Boucas\\n/// @access public\\n////\\n\\n\\n///\\n/// Creates a list of global breakpoints\\n///\\n/// @example scss - Creates a single breakpoint with the label `phone`\\n///  $breakpoints: ('phone': 320px);\\n///\\n$breakpoints: (\\n  'phone': 320px,\\n  'tablet': 768px,\\n  'desktop': 1024px\\n) !default;\\n\\n\\n///\\n/// Creates a list of static expressions or media types\\n///\\n/// @example scss - Creates a single media type (screen)\\n///  $media-expressions: ('screen': 'screen');\\n///\\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\\n///  $media-expressions: (\\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\\n///  );\\n///\\n$media-expressions: (\\n  'screen': 'screen',\\n  'print': 'print',\\n  'handheld': 'handheld',\\n  'landscape': '(orientation: landscape)',\\n  'portrait': '(orientation: portrait)',\\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\\n) !default;\\n\\n\\n///\\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\\n///\\n/// @example scss - Interval for pixels is defined as `1` by default\\n///  @include media('>128px') {}\\n///\\n///  /* Generates: */\\n///  @media (min-width: 129px) {}\\n///\\n/// @example scss - Interval for ems is defined as `0.01` by default\\n///  @include media('>20em') {}\\n///\\n///  /* Generates: */\\n///  @media (min-width: 20.01em) {}\\n///\\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\\n///  @include media('>2.0rem') {}\\n///\\n///  /* Generates: */\\n///  @media (min-width: 2.1rem) {}\\n///\\n$unit-intervals: (\\n  'px': 1,\\n  'em': 0.01,\\n  'rem': 0.1,\\n  '': 0\\n) !default;\\n\\n///\\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\\n/// for browsers that don't support media queries.\\n///\\n/// @example scss - Disables support for media queries\\n///  $im-media-support: false;\\n///  @include media('>=tablet') {\\n///    .foo {\\n///      color: tomato;\\n///    }\\n///  }\\n///\\n///  /* Generates: */\\n///  .foo {\\n///    color: tomato;\\n///  }\\n///\\n$im-media-support: true !default;\\n\\n///\\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\\n/// intercept the breakpoint will be displayed, any others will be ignored.\\n///\\n/// @example scss - This media query will show because it intercepts the static breakpoint\\n///  $im-media-support: false;\\n///  $im-no-media-breakpoint: 'desktop';\\n///  @include media('>=tablet') {\\n///    .foo {\\n///      color: tomato;\\n///    }\\n///  }\\n///\\n///  /* Generates: */\\n///  .foo {\\n///    color: tomato;\\n///  }\\n///\\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\\n///  $im-media-support: false;\\n///  $im-no-media-breakpoint: 'tablet';\\n///  @include media('>=desktop') {\\n///    .foo {\\n///      color: tomato;\\n///    }\\n///  }\\n///\\n///  /* No output */\\n///\\n$im-no-media-breakpoint: 'desktop' !default;\\n\\n///\\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\\n/// are not supported.\\n///\\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\\n///  $im-media-support: false;\\n///  $im-no-media-breakpoint: 'desktop';\\n///  $im-no-media-expressions: ('screen');\\n///  @include media('>=tablet', 'screen') {\\n///    .foo {\\n///      color: tomato;\\n///    }\\n///  }\\n///\\n///   /* Generates: */\\n///   .foo {\\n///     color: tomato;\\n///   }\\n///\\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\\n///  $im-media-support: false;\\n///  $im-no-media-breakpoint: 'desktop';\\n///  $im-no-media-expressions: ('screen');\\n///  @include media('>=tablet', 'retina2x') {\\n///    .foo {\\n///      color: tomato;\\n///    }\\n///  }\\n///\\n///  /* No output */\\n///\\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\\n\\n////\\n/// Cross-engine logging engine\\n/// @author Kitty Giraudel\\n/// @access private\\n////\\n\\n\\n///\\n/// Log a message either with `@error` if supported\\n/// else with `@warn`, using `feature-exists('at-error')`\\n/// to detect support.\\n///\\n/// @param {String} $message - Message to log\\n///\\n@function im-log($message) {\\n  @if feature-exists('at-error') {\\n    @error $message;\\n  } @else {\\n    @warn $message;\\n    $_: noop();\\n  }\\n\\n  @return $message;\\n}\\n\\n\\n///\\n/// Wrapper mixin for the log function so it can be used with a more friendly\\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\\n/// within functions because it is not possible to include a mixin in a function\\n/// and use the mixin everywhere else because it's much more elegant.\\n///\\n/// @param {String} $message - Message to log\\n///\\n@mixin log($message) {\\n  @if im-log($message) {}\\n}\\n\\n\\n///\\n/// Function with no `@return` called next to `@warn` in Sass 3.3\\n/// to trigger a compiling error and stop the process.\\n///\\n@function noop() {}\\n\\n///\\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\\n///\\n/// @param {Arglist}   $conditions  - Media query conditions\\n///\\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\\n///\\n@function im-intercepts-static-breakpoint($conditions...) {\\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\\n\\n  @if not $no-media-breakpoint-value {\\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\\n  }\\n\\n  @each $condition in $conditions {\\n    @if not map-has-key($media-expressions, $condition) {\\n      $operator: get-expression-operator($condition);\\n      $prefix: get-expression-prefix($operator);\\n      $value: get-expression-value($condition, $operator);\\n\\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\\n        @return false;\\n      }\\n    } @else if not index($im-no-media-expressions, $condition) {\\n      @return false;\\n    }\\n  }\\n\\n  @return true;\\n}\\n\\n////\\n/// Parsing engine\\n/// @author Kitty Giraudel\\n/// @access private\\n////\\n\\n\\n///\\n/// Get operator of an expression\\n///\\n/// @param {String} $expression - Expression to extract operator from\\n///\\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\\n///\\n@function get-expression-operator($expression) {\\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\\n    @if str-index($expression, $operator) {\\n      @return $operator;\\n    }\\n  }\\n\\n  // It is not possible to include a mixin inside a function, so we have to\\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\\n  // functions cannot be called anywhere in Sass, we need to hack the call in\\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\\n  $_: im-log('No operator found in `#{$expression}`.');\\n}\\n\\n\\n///\\n/// Get dimension of an expression, based on a found operator\\n///\\n/// @param {String} $expression - Expression to extract dimension from\\n/// @param {String} $operator - Operator from `$expression`\\n///\\n/// @return {String} - `width` or `height` (or potentially anything else)\\n///\\n@function get-expression-dimension($expression, $operator) {\\n  $operator-index: str-index($expression, $operator);\\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\\n  $dimension: 'width';\\n\\n  @if str-length($parsed-dimension) > 0 {\\n    $dimension: $parsed-dimension;\\n  }\\n\\n  @return $dimension;\\n}\\n\\n\\n///\\n/// Get dimension prefix based on an operator\\n///\\n/// @param {String} $operator - Operator\\n///\\n/// @return {String} - `min` or `max`\\n///\\n@function get-expression-prefix($operator) {\\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\\n}\\n\\n\\n///\\n/// Get value of an expression, based on a found operator\\n///\\n/// @param {String} $expression - Expression to extract value from\\n/// @param {String} $operator - Operator from `$expression`\\n///\\n/// @return {Number} - A numeric value\\n///\\n@function get-expression-value($expression, $operator) {\\n  $operator-index: str-index($expression, $operator);\\n  $value: str-slice($expression, $operator-index + str-length($operator));\\n\\n  @if map-has-key($breakpoints, $value) {\\n    $value: map-get($breakpoints, $value);\\n  } @else {\\n    $value: to-number($value);\\n  }\\n\\n  $interval: map-get($unit-intervals, unit($value));\\n\\n  @if not $interval {\\n    // It is not possible to include a mixin inside a function, so we have to\\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\\n    // functions cannot be called anywhere in Sass, we need to hack the call in\\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\\n    $_: im-log('Unknown unit `#{unit($value)}`.');\\n  }\\n\\n  @if $operator == '>' {\\n    $value: $value + $interval;\\n  } @else if $operator == '<' {\\n    $value: $value - $interval;\\n  }\\n\\n  @return $value;\\n}\\n\\n\\n///\\n/// Parse an expression to return a valid media-query expression\\n///\\n/// @param {String} $expression - Expression to parse\\n///\\n/// @return {String} - Valid media query\\n///\\n@function parse-expression($expression) {\\n  // If it is part of $media-expressions, it has no operator\\n  // then there is no need to go any further, just return the value\\n  @if map-has-key($media-expressions, $expression) {\\n    @return map-get($media-expressions, $expression);\\n  }\\n\\n  $operator: get-expression-operator($expression);\\n  $dimension: get-expression-dimension($expression, $operator);\\n  $prefix: get-expression-prefix($operator);\\n  $value: get-expression-value($expression, $operator);\\n\\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\\n}\\n\\n///\\n/// Slice `$list` between `$start` and `$end` indexes\\n///\\n/// @access private\\n///\\n/// @param {List} $list - List to slice\\n/// @param {Number} $start [1] - Start index\\n/// @param {Number} $end [length($list)] - End index\\n///\\n/// @return {List} Sliced list\\n///\\n@function slice($list, $start: 1, $end: length($list)) {\\n  @if length($list) < 1 or $start > $end {\\n    @return ();\\n  }\\n\\n  $result: ();\\n\\n  @for $i from $start through $end {\\n    $result: append($result, nth($list, $i));\\n  }\\n\\n  @return $result;\\n}\\n\\n////\\n/// String to number converter\\n/// @author Kitty Giraudel\\n/// @access private\\n////\\n\\n\\n///\\n/// Casts a string into a number\\n///\\n/// @param {String | Number} $value - Value to be parsed\\n///\\n/// @return {Number}\\n///\\n@function to-number($value) {\\n  @if type-of($value) == 'number' {\\n    @return $value;\\n  } @else if type-of($value) != 'string' {\\n    $_: im-log('Value for `to-number` should be a number or a string.');\\n  }\\n\\n  $first-character: str-slice($value, 1, 1);\\n  $result: 0;\\n  $digits: 0;\\n  $minus: ($first-character == '-');\\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\\n\\n  // Remove +/- sign if present at first character\\n  @if ($first-character == '+' or $first-character == '-') {\\n    $value: str-slice($value, 2);\\n  }\\n\\n  @for $i from 1 through str-length($value) {\\n    $character: str-slice($value, $i, $i);\\n\\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\\n    }\\n\\n    @if $character == '.' {\\n      $digits: 1;\\n    } @else if $digits == 0 {\\n      $result: $result * 10 + map-get($numbers, $character);\\n    } @else {\\n      $digits: $digits * 10;\\n      $result: $result + map-get($numbers, $character) / $digits;\\n    }\\n  }\\n\\n  @return if($minus, -$result, $result);\\n}\\n\\n\\n///\\n/// Add `$unit` to `$value`\\n///\\n/// @param {Number} $value - Value to add unit to\\n/// @param {String} $unit - String representation of the unit\\n///\\n/// @return {Number} - `$value` expressed in `$unit`\\n///\\n@function to-length($value, $unit) {\\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\\n\\n  @if not index(map-keys($units), $unit) {\\n    $_: im-log('Invalid unit `#{$unit}`.');\\n  }\\n\\n  @return $value * map-get($units, $unit);\\n}\\n\\n///\\n/// This mixin aims at redefining the configuration just for the scope of\\n/// the call. It is helpful when having a component needing an extended\\n/// configuration such as custom breakpoints (referred to as tweakpoints)\\n/// for instance.\\n///\\n/// @author Kitty Giraudel\\n///\\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\\n///\\n/// @example scss - Extend the global breakpoints with a tweakpoint\\n///  @include media-context(('custom': 678px)) {\\n///    .foo {\\n///      @include media('>phone', '<=custom') {\\n///       // ...\\n///      }\\n///    }\\n///  }\\n///\\n/// @example scss - Extend the global media expressions with a custom one\\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\\n///    .foo {\\n///      @include media('all', '>phone') {\\n///       // ...\\n///      }\\n///    }\\n///  }\\n///\\n/// @example scss - Extend both configuration maps\\n///  @include media-context(('custom': 678px), ('all': 'all')) {\\n///    .foo {\\n///      @include media('all', '>phone', '<=custom') {\\n///       // ...\\n///      }\\n///    }\\n///  }\\n///\\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\\n  // Save global configuration\\n  $global-breakpoints: $breakpoints;\\n  $global-media-expressions: $media-expressions;\\n\\n  // Update global configuration\\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\\n\\n  @content;\\n\\n  // Restore global configuration\\n  $breakpoints: $global-breakpoints !global;\\n  $media-expressions: $global-media-expressions !global;\\n}\\n\\n////\\n/// include-media public exposed API\\n/// @author Eduardo Boucas\\n/// @access public\\n////\\n\\n\\n///\\n/// Generates a media query based on a list of conditions\\n///\\n/// @param {Arglist}   $conditions  - Media query conditions\\n///\\n/// @example scss - With a single set breakpoint\\n///  @include media('>phone') { }\\n///\\n/// @example scss - With two set breakpoints\\n///  @include media('>phone', '<=tablet') { }\\n///\\n/// @example scss - With custom values\\n///  @include media('>=358px', '<850px') { }\\n///\\n/// @example scss - With set breakpoints with custom values\\n///  @include media('>desktop', '<=1350px') { }\\n///\\n/// @example scss - With a static expression\\n///  @include media('retina2x') { }\\n///\\n/// @example scss - Mixing everything\\n///  @include media('>=350px', '<tablet', 'retina3x') { }\\n///\\n@mixin media($conditions...) {\\n  @if ($im-media-support and length($conditions) == 0) or\\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\\n    @content;\\n  } @else if ($im-media-support and length($conditions) > 0) {\\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\\n      // Recursive call\\n      @include media(slice($conditions, 2)...) {\\n        @content;\\n      }\\n    }\\n  }\\n}\\n\",\"@use '../utils/responsive.scss' as *;\\n\\n%title-150 {\\n\\tfont-size: 15rem;\\n\\tline-height: 1.04;\\n\\n\\t@include media('<phone') {\\n\\t\\tfont-size: 5.5rem;\\n\\t}\\n}\\n\\n%title-57 {\\n\\tfont-size: 5.7rem;\\n\\tline-height: 1.04;\\n\\n\\t@include media('<phone') {\\n\\t\\tfont-size: 2.5rem;\\n\\t}\\n}\\n\\n%title-28 {\\n\\tfont-size: 2.8rem;\\n\\tline-height: 1.04;\\n\\n\\t@include media('<phone') {\\n\\t\\tfont-size: 1.8rem;\\n\\t}\\n}\\n\",\"@use '../utils/variables.scss' as *;\\n\\n@font-face {\\n\\tfont-family: $font-noto-sans;\\n\\tsrc: url('../../static/fonts/Karla-Light.ttf');\\n\\tfont-weight: normal;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n\\n@font-face {\\n\\tfont-family: $font-kara;\\n\\tsrc: url('../../static/fonts/NotoSerifDisplay-Light.ttf');\\n\\tfont-weight: normal;\\n  font-style: normal;\\n  font-display: swap;\\n}\\n\\n\",\"$font-noto-sans: 'Noto Sans';\\n$font-kara: 'Kara';\\n\\n\",\"@use '../shared/description.scss' as *;\\n@use '../shared/titles.scss' as *;\\n\\n@use '../utils/variables.scss' as *;\\n@use './fonts.scss' as *;\\n\\n* {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tbox-sizing: border-box;\\n}\\n\\nhtml {\\n\\tfont-size: calc(100vw / 1440 * 10);\\n\\tline-height: 1;\\n\\toverflow: hidden;\\n\\tposition: fixed;\\n\\ttext-rendering: optimizeLegibility;\\n}\\n\\nhtml,\\nbody {\\n\\theight: 100%;\\n\\twidth: 100%;\\n}\\n\\nh1 {\\n\\tfont-family: $font-noto-sans;\\n\\t@extend %title-150;\\n}\\n\\nh2 {\\n\\tfont-family: $font-noto-sans;\\n\\t@extend %title-57;\\n}\\n\\nh3,\\nh4 {\\n\\tfont-family: $font-noto-sans;\\n\\t@extend %title-28;\\n}\\n\\np,\\na {\\n\\tfont-family: $font-kara;\\n\\t@extend %description-19;\\n}\\n\\nspan {\\n\\tfont-family: $font-kara;\\n\\t@extend %description-13;\\n}\\n\",\".navigation {\\n\\tdisplay: flex;\\n\\tposition: fixed;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\twidth: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n22 | // Exports\n23 | /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n24 | ")}},(function(n){n.h=()=>"74d72de4f02ffc58a4db"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4yN2Y1Mzk5Yzk4NjdiMDUzMDcxMi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7bXdsQ0FBQUEsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL0FudGFyYV9TdHVkaW8vd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjc0ZDcyZGU0ZjAyZmZjNThhNGRiXCIpIl0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==