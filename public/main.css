/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

span {
  font-size: 1.22rem;
  line-height: 1.29;
}
@media (max-width: 1023px) {
  span {
    font-size: 1.7rem;
  }
}
@media (max-width: 767px) {
  span {
    font-size: 1.3rem;
  }
}

p,
a,
p span,
a span {
  font-size: 1.8rem;
  line-height: 1.28;
}
@media (max-width: 1023px) {
  p,
a,
p span,
a span {
    font-size: 2.2rem;
  }
}
@media (min-width: 1025px) {
  p,
a,
p span,
a span {
    font-size: 16px;
  }
}
@media (max-width: 767px) {
  p,
a,
p span,
a span {
    font-size: 1.3rem;
  }
}

.footer .footer__contact span, .footer .footer__contact, h1,
h1 span {
  font-size: 13rem;
  line-height: 1.04;
}
@media (max-width: 1023px) {
  .footer .footer__contact span, .footer .footer__contact, h1,
h1 span {
    font-size: 18rem;
  }
}
@media (max-width: 767px) {
  .footer .footer__contact span, .footer .footer__contact, h1,
h1 span {
    font-size: 5.5rem;
  }
}

h2,
h2 span {
  font-size: 5.7rem;
  line-height: 1.04;
}
@media (max-width: 1023px) {
  h2,
h2 span {
    font-size: 6.8rem;
  }
}
@media (max-width: 767px) {
  h2,
h2 span {
    font-size: 2.5rem;
  }
}

h3,
h4,
h3 span,
h4 span {
  font-size: 2.8rem;
  line-height: 1.04;
}
@media (max-width: 767px) {
  h3,
h4,
h3 span,
h4 span {
    font-size: 1.8rem;
  }
}

@font-face {
  font-family: "Noto Sans";
  src: url(032f3ccf2ab0daa327fe.ttf);
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Kara";
  src: url(d59df781ed5aa5438e87.ttf);
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 0.6944444444vw;
  text-rendering: optimizeLegibility;
}
@media (max-width: 767px) {
  html {
    font-size: 2.3696682464vw;
  }
}

html,
body {
  height: 100%;
  width: 100%;
  background-color: #f5f5f5;
}

::-webkit-scrollbar {
  display: none;
  width: 0;
}

::selection {
  color: #979797;
}

ul,
menu {
  list-style: none;
  display: flex;
  align-items: center;
}

span {
  font-family: "Kara";
}

a {
  text-decoration: none;
  color: #000;
}

h1,
h1 span {
  font-family: "Noto Sans";
}

h2,
h2 span {
  font-family: "Noto Sans";
}

h3,
h4,
h3 span,
h4 span {
  font-family: "Noto Sans";
}

p,
a,
p span,
a span {
  font-family: "Kara";
}

.navigation .navigation__item__link:not(.btn--cto a) {
  position: relative;
}
.navigation .navigation__item__link:not(.btn--cto a)::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  background-color: #000;
  width: 100%;
  height: 0.1rem;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  -webkit-transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  -moz-transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  -ms-transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
  -o-transition: transform 0.3s cubic-bezier(0.77, 0, 0.175, 1);
}
.navigation .navigation__item__link:hover:not(.btn--cto a)::before {
  transform: scaleX(1);
  transform-origin: left;
}

.navigate__to__svg .navigate__svg__outer, .home__contact .services__container .navigate__svg__outer,
.navigate__to__svg .line--offset,
.home__contact .services__container .line--offset {
  transition: transform 0.45s cubic-bezier(0.77, 0, 0.175, 1), stroke-dashoffset 0.45s cubic-bezier(0.77, 0, 0.175, 1);
  -webkit-transition: transform 0.45s cubic-bezier(0.77, 0, 0.175, 1), stroke-dashoffset 0.45s cubic-bezier(0.77, 0, 0.175, 1);
  -moz-transition: transform 0.45s cubic-bezier(0.77, 0, 0.175, 1), stroke-dashoffset 0.45s cubic-bezier(0.77, 0, 0.175, 1);
  -ms-transition: transform 0.45s cubic-bezier(0.77, 0, 0.175, 1), stroke-dashoffset 0.45s cubic-bezier(0.77, 0, 0.175, 1);
  -o-transition: transform 0.45s cubic-bezier(0.77, 0, 0.175, 1), stroke-dashoffset 0.45s cubic-bezier(0.77, 0, 0.175, 1);
}
.navigate__to__svg .line--offset, .home__contact .services__container .line--offset {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
}
.navigate__to__svg:hover .navigate__svg__outer, .home__contact .services__container:hover .navigate__svg__outer {
  transform: rotate(45deg);
}
.navigate__to__svg:hover .line--offset, .home__contact .services__container:hover .line--offset {
  stroke-dashoffset: 10;
}

.navigation {
  display: flex;
  gap: 3.1rem;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  margin-bottom: 8rem;
  padding-block: 34px 0;
  padding-inline: 11.8rem;
}
@media (max-width: 767px) {
  .navigation {
    padding-inline: 2.3rem;
  }
}
.navigation__container {
  gap: 3.1rem;
}
.navigation .navigation__item__link {
  text-transform: uppercase;
}
.navigation .navigation__item.btn--cto {
  padding: 0.5rem 1.8rem;
  cursor: pointer;
}
.navigation .btn__cto__container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.navigation .btn__cto__container svg {
  position: absolute;
  height: 135%;
}
@media (max-width: 767px) {
  .navigation .navigation__menu__wrapper {
    display: none;
  }
}

.preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-color: rgb(77, 24, 24);
  z-index: 10000;
}

.footer {
  background-color: #000;
  padding-block: 6rem 3rem;
  padding-left: 11.5rem;
  color: #fff;
}
@media (max-width: 1023px) {
  .footer {
    padding-left: 7rem;
  }
}
.footer .footer__text {
  text-transform: uppercase;
}
.footer .footer__contact span {
  font-family: "Noto Sans";
}
.footer .footer__contact {
  color: #fff;
  font-family: "Noto Sans";
  position: relative;
  display: inline-block;
  margin-block: 6rem 5rem;
  transition: color 0.45s ease-out;
}
.footer .footer__contact:hover {
  color: rgba(255, 255, 255, 0.502);
}
.footer .footer__contact::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.3rem;
  background-color: rgba(255, 255, 255, 0.65);
}

.circle {
  position: absolute;
  filter: blur(90px);
  aspect-ratio: 1/1;
  border-radius: 50%;
  z-index: 2;
}
@media (max-width: 1023px) {
  .circle {
    display: none;
  }
}

.circle.circle--bage {
  background-color: #cfb47c;
  width: 38rem;
  top: 43.7rem;
  right: 40.5rem;
}

.circle.circle--grey {
  background-color: #a7a7a7;
  width: 25rem;
  top: 22rem;
  left: 22.9rem;
}

.home__hero,
.home__about {
  position: relative;
  z-index: 3;
  margin-left: 28rem;
}
@media (max-width: 1023px) {
  .home__hero,
.home__about {
    margin-left: 7rem;
  }
}
@media (max-width: 767px) {
  .home__hero,
.home__about {
    margin-left: 2.3rem;
  }
}

.home__title {
  margin-bottom: 21.8rem;
  display: flex;
  flex-direction: column;
}
@media (max-width: 767px) {
  .home__title {
    margin-bottom: 4rem;
    gap: 1.4rem;
  }
}
.home__title .title__item__span {
  margin-bottom: 14px;
}
.home__title .title__item {
  display: flex;
  gap: 6rem;
  align-items: flex-end;
}
.home__title .title__item__text {
  line-height: 0.83;
}
@media (max-width: 767px) {
  .home__title .title__item__span {
    visibility: hidden;
    opacity: 0;
    display: none;
  }
}

.phone__description__container {
  display: none;
}
@media (max-width: 767px) {
  .phone__description__container {
    display: flex;
    flex-wrap: wrap;
    white-space: nowrap;
    gap: 2rem;
    column-gap: 4.2rem;
    margin-bottom: 6rem;
  }
}

.home__scroll__svg {
  position: absolute;
  right: 3.6rem;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.85rem;
}
@media (max-width: 1023px) {
  .home__scroll__svg {
    width: 10rem;
    gap: 0;
  }
  .home__scroll__svg .scroll__svg__inner {
    width: 3rem;
  }
  .home__scroll__svg .scroll__svg__outer {
    width: 12rem;
  }
  .home__scroll__svg .scroll__svg__arrow {
    width: 6rem;
  }
}
@media (max-width: 767px) {
  .home__scroll__svg {
    width: auto;
    right: 2.3rem;
  }
  .home__scroll__svg .scroll__svg__inner {
    width: 2rem;
  }
  .home__scroll__svg .scroll__svg__outer {
    width: 6rem;
  }
  .home__scroll__svg .scroll__svg__arrow {
    width: 3rem;
  }
}

.scroll__svg__container,
.scroll__svg__arrow,
.navigate__svg__container,
.navigate__to__svg {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.scroll__svg__inner,
.scroll__svg__outer,
.scroll__svg__arrow {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.navigate__to__svg {
  justify-content: flex-start;
  gap: 1.85rem;
  cursor: pointer;
}

.scroll__svg__inner,
.navigate__svg__inner {
  position: absolute;
}

.scroll__svg__outer,
.navigate__svg__outer {
  transform-origin: center;
  display: flex;
  align-items: center;
  justify-content: center;
}

.home__about .home__about__description {
  margin-block: 4rem 3rem;
  display: flex;
  gap: 4.2rem;
}
@media (max-width: 767px) {
  .home__about .home__about__description {
    flex-direction: column;
  }
}

.home__selected__works {
  margin-left: 11.6rem;
}
@media (max-width: 1023px) {
  .home__selected__works {
    margin-left: 7rem;
  }
}
@media (max-width: 767px) {
  .home__selected__works {
    margin-left: 2.3rem;
  }
}
.home__selected__works .selected__works__header {
  margin-block: 15.8rem 9rem;
  margin-inline: auto;
  padding-right: 11.6rem;
  width: 83%;
  display: flex;
  gap: 10.2rem;
  justify-content: space-between;
  align-items: center;
  white-space: nowrap;
}
@media (max-width: 767px) {
  .home__selected__works .selected__works__header {
    padding-right: 2.3rem;
    gap: 5rem;
  }
}
.home__selected__works .selected__works__header span {
  height: 0.07rem;
  background-color: #000;
  width: 100%;
}
@media (max-width: 1023px) {
  .home__selected__works .selected__works__header {
    width: 100%;
  }
}
.home__selected__works .selected__works__wrapper {
  display: inline-flex;
  flex-direction: column;
  gap: 2.8rem;
}
.home__selected__works .selected__works__wrapper .selected__works__item {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  gap: 1.5rem;
  transition: opacity 0.75s ease-out;
  -webkit-transition: opacity 0.75s ease-out;
  -moz-transition: opacity 0.75s ease-out;
  -ms-transition: opacity 0.75s ease-out;
  -o-transition: opacity 0.75s ease-out;
}
.home__selected__works .selected__works__wrapper .selected__works__item:nth-child(odd) {
  flex-direction: row-reverse;
}
.home__selected__works .selected__works__wrapper .selected__works__item .selected__works__title {
  line-height: 0.83;
}

.home__contact {
  margin-block: 17.4rem 8.1rem;
  margin-inline: 11.6rem;
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}
@media (max-width: 1023px) {
  .home__contact {
    margin-inline: 7rem;
  }
}
@media (max-width: 767px) {
  .home__contact {
    margin-inline: 2.3rem;
    flex-direction: column-reverse;
    align-items: flex-start;
  }
}
.home__contact__image {
  width: 100%;
  max-width: 48.5rem;
}
.home__contact .home__contact__text {
  padding-block: 3rem 5rem;
}
.home__contact .services__list {
  display: inline-block;
  margin-block: 2rem 3rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQWlGSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUNDSjs7QURFQTs7Ozs7Ozs7Ozs7RUFXSTtBQ0NKOztBREVBO0VBQ0k7QUNDSjs7QURFQTs7RUFFSTtBQ0NKOztBREVBOztFQUVJO0FDQ0o7O0FERUE7Ozs7RUFJSTtFQUNBO0FDQ0o7O0FERUE7RUFDSTtFQUNBO0FDQ0o7O0FDOUhBO0VBQ0M7RUFDQTtBRGlJRDtBRXdhSTtFRDNpQko7SUFLRTtFRGtJQTtBQUNGO0FFbWFJO0VEM2lCSjtJQVNFO0VEbUlBO0FBQ0Y7O0FDaElBOzs7O0VBQ0M7RUFDQTtBRHNJRDtBRXNaSTtFRDloQko7Ozs7SUFLRTtFRDBJQTtBQUNGO0FFOFlJO0VEOWhCSjs7OztJQVVFO0VENklBO0FBQ0Y7QUVzWUk7RUQ5aEJKOzs7O0lBY0U7RURpSkE7QUFDRjs7QUc3S0E7O0VBQ0M7RUFDQTtBSGlMRDtBRXdYSTtFQzNpQko7O0lBS0U7RUhtTEE7QUFDRjtBRWtYSTtFQzNpQko7O0lBU0U7RUhxTEE7QUFDRjs7QUdsTEE7O0VBQ0M7RUFDQTtBSHNMRDtBRXNXSTtFQzloQko7O0lBS0U7RUh3TEE7QUFDRjtBRWdXSTtFQzloQko7O0lBU0U7RUgwTEE7QUFDRjs7QUd2TEE7Ozs7RUFDQztFQUNBO0FINkxEO0FFa1ZJO0VDamhCSjs7OztJQUtFO0VIaU1BO0FBQ0Y7O0FJak9BO0VBQ0Msd0JDSGdCO0VESWhCO0VBQ0E7RUFDQTtFQUNBO0FKb09EO0FJak9BO0VBQ0MsbUJDVlc7RURXWDtFQUNBO0VBQ0E7RUFDQTtBSm1PRDtBTXhPQTtFQUNDO0VBQ0E7RUFDQTtBTjBPRDs7QU12T0E7RUFDQztFQU1BO0FOcU9EO0FFaVRJO0VJN2hCSjtJQUdFO0VONk9BO0FBQ0Y7O0FNdk9BOztFQUVDO0VBQ0E7RUFDQTtBTjBPRDs7QU12T0E7RUFDQztFQUNBO0FOME9EOztBTXZPQTtFQUNDO0FOME9EOztBTXZPQTs7RUFFQztFQUVBO0VBQ0E7QU55T0Q7O0FNdE9BO0VBQ0MsbUJEbERXO0FMMlJaOztBTXJPQTtFQUNDO0VBQ0E7QU53T0Q7O0FNck9BOztFQUVDLHdCRDlEZ0I7QUxzU2pCOztBTXBPQTs7RUFFQyx3QkRwRWdCO0FMMlNqQjs7QU1uT0E7Ozs7RUFJQyx3QkQ1RWdCO0FMa1RqQjs7QU1sT0E7Ozs7RUFJQyxtQkRuRlc7QUx3VFo7O0FPelRBO0VBQ0M7QVA0VEQ7QU8xVEM7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FQNFRGO0FPelRDO0VBQ0M7RUFDQTtBUDJURjs7QU92VEM7OztFQUVDO0VBS0E7RUFFQTtFQUVBO0VBRUE7QVBvVEY7QU9oVEM7RUFDQztFQUNBO0FQa1RGO0FPOVNFO0VBQ0M7QVBnVEg7QU83U0U7RUFDQztBUCtTSDs7QVFqV0E7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0FSbVdEO0FFNkxJO0VNemlCSjtJQVdFO0VScVdBO0FBQ0Y7QVFuV0M7RUFDQztBUnFXRjtBUWxXQztFQUNDO0FSb1dGO0FRN1ZDO0VBQ0M7RUFDQTtBUitWRjtBUTVWQztFQUNDO0VBQ0E7RUFDQTtFQUNBO0FSOFZGO0FRNVZFO0VBQ0M7RUFDQTtBUjhWSDtBRW9LSTtFTTdmRjtJQUNDO0VSNFZEO0FBQ0Y7O0FTN1lBO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVRnWkQ7O0FVcFpBO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7QVZ1WkQ7QUU4SUk7RVF6aUJKO0lBT0U7RVZ3WkE7QUFDRjtBVXRaQztFQUNDO0FWd1pGO0FVclpDO0VBQ0Msd0JMbkJlO0FMMGFqQjtBVW5aQztFQUNDO0VBQ0Esd0JMekJlO0VLMkJmO0VBQ0E7RUFDQTtFQUNBO0FWb1pGO0FVbFpFO0VBQ0M7QVZvWkg7QVVqWkU7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBVm1aSDs7QVd6YkE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0FYNGJEO0FFdUdJO0VTeGlCSjtJQU9FO0VYOGJBO0FBQ0Y7O0FXM2JBO0VBQ0MseUJOZE07RU1lTjtFQUNBO0VBQ0E7QVg4YkQ7O0FXM2JBO0VBQ0MseUJOcEJjO0VNcUJkO0VBQ0E7RUFDQTtBWDhiRDs7QVczYkE7O0VBRUM7RUFDQTtFQUNBO0FYOGJEO0FFNkVJO0VTL2dCSjs7SUFPRTtFWGdjQTtBQUNGO0FFdUVJO0VTL2dCSjs7SUFXRTtFWGtjQTtBQUNGOztBVy9iQTtFQUNDO0VBQ0E7RUFDQTtBWGtjRDtBRTJESTtFU2hnQko7SUFNRTtJQUNBO0VYbWNBO0FBQ0Y7QVdqY0M7RUFDQztBWG1jRjtBV2hjQztFQUNDO0VBQ0E7RUFDQTtBWGtjRjtBV2hjRTtFQUNDO0FYa2NIO0FFMENJO0VTeGVEO0lBQ0M7SUFDQTtJQUNBO0VYaWNGO0FBQ0Y7O0FXNWJBO0VBQ0M7QVgrYkQ7QUUrQkk7RVMvZEo7SUFJRTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7RVhnY0E7QUFDRjs7QVc3YkE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBWGdjRDtBRVdJO0VTbGRKO0lBVUU7SUFDQTtFWGljQTtFVy9iQTtJQUNDO0VYaWNEO0VXOWJBO0lBQ0M7RVhnY0Q7RVc3YkE7SUFDQztFWCtiRDtBQUNGO0FFSkk7RVNsZEo7SUEyQkU7SUFDQTtFWCtiQTtFVzdiQTtJQUNDO0VYK2JEO0VXNWJBO0lBQ0M7RVg4YkQ7RVczYkE7SUFDQztFWDZiRDtBQUNGOztBV3piQTs7OztFQUlDO0VBQ0E7RUFDQTtFQUNBO0FYNGJEOztBV3piQTs7O0VBR0M7RUFDQTtFQUNBO0VBQ0E7QVg0YkQ7O0FXemJBO0VBQ0M7RUFDQTtFQUNBO0FYNGJEOztBV3ZiQTs7RUFFQztBWDBiRDs7QVd2YkE7O0VBRUM7RUFDQTtFQUNBO0VBQ0E7QVgwYkQ7O0FXdGJDO0VBQ0M7RUFDQTtFQUNBO0FYeWJGO0FFL0RJO0VTN1hIO0lBTUU7RVgwYkQ7QUFDRjs7QVd0YkE7RUFDQztBWHliRDtBRXhFSTtFU2xYSjtJQUlFO0VYMGJBO0FBQ0Y7QUU3RUk7RVNsWEo7SUFRRTtFWDJiQTtBQUNGO0FXemJDO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBS0E7RUFDQTtFQUNBO0FYdWJGO0FFN0ZJO0VTdldIO0lBUUU7SUFDQTtFWGdjRDtBQUNGO0FXM2JFO0VBQ0M7RUFDQTtFQUNBO0FYNmJIO0FFeEdJO0VTdldIO0lBc0JFO0VYNmJEO0FBQ0Y7QVcxYkM7RUFDQztFQUNBO0VBQ0E7QVg0YkY7QVcxYkU7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QVg0Ykg7QVczYkc7RUFDQztBWDZiSjtBVzFiRztFQUNDO0FYNGJKOztBV3RiQTtFQUNDO0VBQ0E7RUFNQTtFQUVBO0VBQ0E7QVhtYkQ7QUUzSUk7RVNuVEo7SUFLRTtFWDZiQTtBQUNGO0FFaEpJO0VTblRKO0lBY0U7SUFDQTtJQUNBO0VYeWJBO0FBQ0Y7QVd2YkM7RUFDQztFQUNBO0FYeWJGO0FXdGJDO0VBQ0M7QVh3YkY7QVdyYkM7RUFDQztFQUNBO0FYdWJGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BbnRhcmFfU3R1ZGlvLy4vc3R5bGVzL2Jhc2UvcmVzZXQuc2NzcyIsIndlYnBhY2s6Ly9BbnRhcmFfU3R1ZGlvLy4vc3R5bGVzL2luZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vQW50YXJhX1N0dWRpby8uL3N0eWxlcy9zaGFyZWQvZGVzY3JpcHRpb24uc2NzcyIsIndlYnBhY2s6Ly9BbnRhcmFfU3R1ZGlvLy4vbm9kZV9tb2R1bGVzL2luY2x1ZGUtbWVkaWEvZGlzdC9faW5jbHVkZS1tZWRpYS5zY3NzIiwid2VicGFjazovL0FudGFyYV9TdHVkaW8vLi9zdHlsZXMvc2hhcmVkL3RpdGxlcy5zY3NzIiwid2VicGFjazovL0FudGFyYV9TdHVkaW8vLi9zdHlsZXMvYmFzZS9mb250cy5zY3NzIiwid2VicGFjazovL0FudGFyYV9TdHVkaW8vLi9zdHlsZXMvdXRpbHMvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vQW50YXJhX1N0dWRpby8uL3N0eWxlcy9iYXNlL2dsb2JhbC5zY3NzIiwid2VicGFjazovL0FudGFyYV9TdHVkaW8vLi9zdHlsZXMvc2hhcmVkL2xpbmtzLnNjc3MiLCJ3ZWJwYWNrOi8vQW50YXJhX1N0dWRpby8uL3N0eWxlcy9jb21wb25lbnRzL25hdmlnYXRpb24uc2NzcyIsIndlYnBhY2s6Ly9BbnRhcmFfU3R1ZGlvLy4vc3R5bGVzL2NvbXBvbmVudHMvcHJlbG9hZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vQW50YXJhX1N0dWRpby8uL3N0eWxlcy9jb21wb25lbnRzL2Zvb3Rlci5zY3NzIiwid2VicGFjazovL0FudGFyYV9TdHVkaW8vLi9zdHlsZXMvcGFnZXMvaG9tZS9ob21lLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiaHRtbCxcclxuYm9keSxcclxuZGl2LFxyXG5zcGFuLFxyXG5hcHBsZXQsXHJcbm9iamVjdCxcclxuaWZyYW1lLFxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbmg2LFxyXG5wLFxyXG5ibG9ja3F1b3RlLFxyXG5wcmUsXHJcbmEsXHJcbmFiYnIsXHJcbmFjcm9ueW0sXHJcbmFkZHJlc3MsXHJcbmJpZyxcclxuY2l0ZSxcclxuY29kZSxcclxuZGVsLFxyXG5kZm4sXHJcbmVtLFxyXG5pbWcsXHJcbmlucyxcclxua2JkLFxyXG5xLFxyXG5zLFxyXG5zYW1wLFxyXG5zbWFsbCxcclxuc3RyaWtlLFxyXG5zdHJvbmcsXHJcbnN1Yixcclxuc3VwLFxyXG50dCxcclxudmFyLFxyXG5iLFxyXG51LFxyXG5pLFxyXG5jZW50ZXIsXHJcbmRsLFxyXG5kdCxcclxuZGQsXHJcbm9sLFxyXG51bCxcclxubGksXHJcbmZpZWxkc2V0LFxyXG5mb3JtLFxyXG5sYWJlbCxcclxubGVnZW5kLFxyXG50YWJsZSxcclxuY2FwdGlvbixcclxudGJvZHksXHJcbnRmb290LFxyXG50aGVhZCxcclxudHIsXHJcbnRoLFxyXG50ZCxcclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmNhbnZhcyxcclxuZGV0YWlscyxcclxuZW1iZWQsXHJcbmZpZ3VyZSxcclxuZmlnY2FwdGlvbixcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbmhncm91cCxcclxubWVudSxcclxubmF2LFxyXG5vdXRwdXQsXHJcbnJ1YnksXHJcbnNlY3Rpb24sXHJcbnN1bW1hcnksXHJcbnRpbWUsXHJcbm1hcmssXHJcbmF1ZGlvLFxyXG52aWRlbyB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgZm9udC1zaXplOiAxMDAlO1xyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmRldGFpbHMsXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbmhncm91cCxcclxubWVudSxcclxubmF2LFxyXG5zZWN0aW9uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG59XHJcblxyXG5vbCxcclxudWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuYmxvY2txdW90ZSxcclxucSB7XHJcbiAgICBxdW90ZXM6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGU6YmVmb3JlLFxyXG5ibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSxcclxucTphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgY29udGVudDogbm9uZTtcclxufVxyXG5cclxudGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xyXG59XHJcbiIsImh0bWwsXG5ib2R5LFxuZGl2LFxuc3BhbixcbmFwcGxldCxcbm9iamVjdCxcbmlmcmFtZSxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbnAsXG5ibG9ja3F1b3RlLFxucHJlLFxuYSxcbmFiYnIsXG5hY3JvbnltLFxuYWRkcmVzcyxcbmJpZyxcbmNpdGUsXG5jb2RlLFxuZGVsLFxuZGZuLFxuZW0sXG5pbWcsXG5pbnMsXG5rYmQsXG5xLFxucyxcbnNhbXAsXG5zbWFsbCxcbnN0cmlrZSxcbnN0cm9uZyxcbnN1YixcbnN1cCxcbnR0LFxudmFyLFxuYixcbnUsXG5pLFxuY2VudGVyLFxuZGwsXG5kdCxcbmRkLFxub2wsXG51bCxcbmxpLFxuZmllbGRzZXQsXG5mb3JtLFxubGFiZWwsXG5sZWdlbmQsXG50YWJsZSxcbmNhcHRpb24sXG50Ym9keSxcbnRmb290LFxudGhlYWQsXG50cixcbnRoLFxudGQsXG5hcnRpY2xlLFxuYXNpZGUsXG5jYW52YXMsXG5kZXRhaWxzLFxuZW1iZWQsXG5maWd1cmUsXG5maWdjYXB0aW9uLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbm91dHB1dCxcbnJ1YnksXG5zZWN0aW9uLFxuc3VtbWFyeSxcbnRpbWUsXG5tYXJrLFxuYXVkaW8sXG52aWRlbyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuc3BhbiB7XG4gIGZvbnQtc2l6ZTogMS4yMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgc3BhbiB7XG4gICAgZm9udC1zaXplOiAxLjNyZW07XG4gIH1cbn1cblxucCxcbmEsXG5wIHNwYW4sXG5hIHNwYW4ge1xuICBmb250LXNpemU6IDEuOHJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIHAsXG5hLFxucCBzcGFuLFxuYSBzcGFuIHtcbiAgICBmb250LXNpemU6IDIuMnJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICBwLFxuYSxcbnAgc3BhbixcbmEgc3BhbiB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgcCxcbmEsXG5wIHNwYW4sXG5hIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICB9XG59XG5cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFjdCBzcGFuLCAuZm9vdGVyIC5mb290ZXJfX2NvbnRhY3QsIGgxLFxuaDEgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMTNyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjA0O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhY3Qgc3BhbiwgLmZvb3RlciAuZm9vdGVyX19jb250YWN0LCBoMSxcbmgxIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMThyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZm9vdGVyIC5mb290ZXJfX2NvbnRhY3Qgc3BhbiwgLmZvb3RlciAuZm9vdGVyX19jb250YWN0LCBoMSxcbmgxIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogNS41cmVtO1xuICB9XG59XG5cbmgyLFxuaDIgc3BhbiB7XG4gIGZvbnQtc2l6ZTogNS43cmVtO1xuICBsaW5lLWhlaWdodDogMS4wNDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgaDIsXG5oMiBzcGFuIHtcbiAgICBmb250LXNpemU6IDYuOHJlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIGgyLFxuaDIgc3BhbiB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gIH1cbn1cblxuaDMsXG5oNCxcbmgzIHNwYW4sXG5oNCBzcGFuIHtcbiAgZm9udC1zaXplOiAyLjhyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjA0O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIGgzLFxuaDQsXG5oMyBzcGFuLFxuaDQgc3BhbiB7XG4gICAgZm9udC1zaXplOiAxLjhyZW07XG4gIH1cbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xuICBzcmM6IHVybChcIi4uL3N0YXRpYy9mb250cy9Ob3RvU2VyaWZEaXNwbGF5LUxpZ2h0LnR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiS2FyYVwiO1xuICBzcmM6IHVybChcIi4uL3N0YXRpYy9mb250cy9LYXJsYS1MaWdodC50dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMC42OTQ0NDQ0NDQ0dnc7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAyLjM2OTY2ODI0NjR2dztcbiAgfVxufVxuXG5odG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICBkaXNwbGF5OiBub25lO1xuICB3aWR0aDogMDtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBjb2xvcjogIzk3OTc5Nztcbn1cblxudWwsXG5tZW51IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBcIkthcmFcIjtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMwMDA7XG59XG5cbmgxLFxuaDEgc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBcIk5vdG8gU2Fuc1wiO1xufVxuXG5oMixcbmgyIHNwYW4ge1xuICBmb250LWZhbWlseTogXCJOb3RvIFNhbnNcIjtcbn1cblxuaDMsXG5oNCxcbmgzIHNwYW4sXG5oNCBzcGFuIHtcbiAgZm9udC1mYW1pbHk6IFwiTm90byBTYW5zXCI7XG59XG5cbnAsXG5hLFxucCBzcGFuLFxuYSBzcGFuIHtcbiAgZm9udC1mYW1pbHk6IFwiS2FyYVwiO1xufVxuXG4ubmF2aWdhdGlvbiAubmF2aWdhdGlvbl9faXRlbV9fbGluazpub3QoLmJ0bi0tY3RvIGEpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLm5hdmlnYXRpb24gLm5hdmlnYXRpb25fX2l0ZW1fX2xpbms6bm90KC5idG4tLWN0byBhKTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDAuMXJlbTtcbiAgdHJhbnNmb3JtOiBzY2FsZVgoMCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHJpZ2h0O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuICAtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4gIC1tb3otdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcbiAgLW1zLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4gIC1vLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG59XG4ubmF2aWdhdGlvbiAubmF2aWdhdGlvbl9faXRlbV9fbGluazpob3Zlcjpub3QoLmJ0bi0tY3RvIGEpOjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgxKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdDtcbn1cblxuLm5hdmlnYXRlX190b19fc3ZnIC5uYXZpZ2F0ZV9fc3ZnX19vdXRlciwgLmhvbWVfX2NvbnRhY3QgLnNlcnZpY2VzX19jb250YWluZXIgLm5hdmlnYXRlX19zdmdfX291dGVyLFxuLm5hdmlnYXRlX190b19fc3ZnIC5saW5lLS1vZmZzZXQsXG4uaG9tZV9fY29udGFjdCAuc2VydmljZXNfX2NvbnRhaW5lciAubGluZS0tb2Zmc2V0IHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSksIHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSksIHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4gIC1tb3otdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSksIHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4gIC1tcy10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKSwgc3Ryb2tlLWRhc2hvZmZzZXQgMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcbiAgLW8tdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSksIHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG59XG4ubmF2aWdhdGVfX3RvX19zdmcgLmxpbmUtLW9mZnNldCwgLmhvbWVfX2NvbnRhY3QgLnNlcnZpY2VzX19jb250YWluZXIgLmxpbmUtLW9mZnNldCB7XG4gIHN0cm9rZS1kYXNoYXJyYXk6IDEwMDtcbiAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDEwMDtcbn1cbi5uYXZpZ2F0ZV9fdG9fX3N2Zzpob3ZlciAubmF2aWdhdGVfX3N2Z19fb3V0ZXIsIC5ob21lX19jb250YWN0IC5zZXJ2aWNlc19fY29udGFpbmVyOmhvdmVyIC5uYXZpZ2F0ZV9fc3ZnX19vdXRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbn1cbi5uYXZpZ2F0ZV9fdG9fX3N2Zzpob3ZlciAubGluZS0tb2Zmc2V0LCAuaG9tZV9fY29udGFjdCAuc2VydmljZXNfX2NvbnRhaW5lcjpob3ZlciAubGluZS0tb2Zmc2V0IHtcbiAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDEwO1xufVxuXG4ubmF2aWdhdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogMy4xcmVtO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiA4cmVtO1xuICBwYWRkaW5nLWJsb2NrOiAzNHB4IDA7XG4gIHBhZGRpbmctaW5saW5lOiAxMS44cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5uYXZpZ2F0aW9uIHtcbiAgICBwYWRkaW5nLWlubGluZTogMi4zcmVtO1xuICB9XG59XG4ubmF2aWdhdGlvbl9fY29udGFpbmVyIHtcbiAgZ2FwOiAzLjFyZW07XG59XG4ubmF2aWdhdGlvbiAubmF2aWdhdGlvbl9faXRlbV9fbGluayB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4ubmF2aWdhdGlvbiAubmF2aWdhdGlvbl9faXRlbS5idG4tLWN0byB7XG4gIHBhZGRpbmc6IDAuNXJlbSAxLjhyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5uYXZpZ2F0aW9uIC5idG5fX2N0b19fY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5uYXZpZ2F0aW9uIC5idG5fX2N0b19fY29udGFpbmVyIHN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxMzUlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5uYXZpZ2F0aW9uIC5uYXZpZ2F0aW9uX19tZW51X193cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5wcmVsb2FkZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig3NywgMjQsIDI0KTtcbiAgei1pbmRleDogMTAwMDA7XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICBwYWRkaW5nLWJsb2NrOiA2cmVtIDNyZW07XG4gIHBhZGRpbmctbGVmdDogMTEuNXJlbTtcbiAgY29sb3I6ICNmZmY7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmctbGVmdDogN3JlbTtcbiAgfVxufVxuLmZvb3RlciAuZm9vdGVyX190ZXh0IHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbi5mb290ZXIgLmZvb3Rlcl9fY29udGFjdCBzcGFuIHtcbiAgZm9udC1mYW1pbHk6IFwiTm90byBTYW5zXCI7XG59XG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhY3Qge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1mYW1pbHk6IFwiTm90byBTYW5zXCI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tYmxvY2s6IDZyZW0gNXJlbTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC40NXMgZWFzZS1vdXQ7XG59XG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhY3Q6aG92ZXIge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUwMik7XG59XG4uZm9vdGVyIC5mb290ZXJfX2NvbnRhY3Q6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDAuM3JlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY1KTtcbn1cblxuLmNpcmNsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZmlsdGVyOiBibHVyKDkwcHgpO1xuICBhc3BlY3QtcmF0aW86IDEvMTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB6LWluZGV4OiAyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuY2lyY2xlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5jaXJjbGUuY2lyY2xlLS1iYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NmYjQ3YztcbiAgd2lkdGg6IDM4cmVtO1xuICB0b3A6IDQzLjdyZW07XG4gIHJpZ2h0OiA0MC41cmVtO1xufVxuXG4uY2lyY2xlLmNpcmNsZS0tZ3JleSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhN2E3YTc7XG4gIHdpZHRoOiAyNXJlbTtcbiAgdG9wOiAyMnJlbTtcbiAgbGVmdDogMjIuOXJlbTtcbn1cblxuLmhvbWVfX2hlcm8sXG4uaG9tZV9fYWJvdXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDM7XG4gIG1hcmdpbi1sZWZ0OiAyOHJlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmhvbWVfX2hlcm8sXG4uaG9tZV9fYWJvdXQge1xuICAgIG1hcmdpbi1sZWZ0OiA3cmVtO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmhvbWVfX2hlcm8sXG4uaG9tZV9fYWJvdXQge1xuICAgIG1hcmdpbi1sZWZ0OiAyLjNyZW07XG4gIH1cbn1cblxuLmhvbWVfX3RpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMjEuOHJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDRyZW07XG4gICAgZ2FwOiAxLjRyZW07XG4gIH1cbn1cbi5ob21lX190aXRsZSAudGl0bGVfX2l0ZW1fX3NwYW4ge1xuICBtYXJnaW4tYm90dG9tOiAxNHB4O1xufVxuLmhvbWVfX3RpdGxlIC50aXRsZV9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogNnJlbTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuLmhvbWVfX3RpdGxlIC50aXRsZV9faXRlbV9fdGV4dCB7XG4gIGxpbmUtaGVpZ2h0OiAwLjgzO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ob21lX190aXRsZSAudGl0bGVfX2l0ZW1fX3NwYW4ge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuLnBob25lX19kZXNjcmlwdGlvbl9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAucGhvbmVfX2Rlc2NyaXB0aW9uX19jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgZ2FwOiAycmVtO1xuICAgIGNvbHVtbi1nYXA6IDQuMnJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA2cmVtO1xuICB9XG59XG5cbi5ob21lX19zY3JvbGxfX3N2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDMuNnJlbTtcbiAgYm90dG9tOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDEuODVyZW07XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5ob21lX19zY3JvbGxfX3N2ZyB7XG4gICAgd2lkdGg6IDEwcmVtO1xuICAgIGdhcDogMDtcbiAgfVxuICAuaG9tZV9fc2Nyb2xsX19zdmcgLnNjcm9sbF9fc3ZnX19pbm5lciB7XG4gICAgd2lkdGg6IDNyZW07XG4gIH1cbiAgLmhvbWVfX3Njcm9sbF9fc3ZnIC5zY3JvbGxfX3N2Z19fb3V0ZXIge1xuICAgIHdpZHRoOiAxMnJlbTtcbiAgfVxuICAuaG9tZV9fc2Nyb2xsX19zdmcgLnNjcm9sbF9fc3ZnX19hcnJvdyB7XG4gICAgd2lkdGg6IDZyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fc2Nyb2xsX19zdmcge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHJpZ2h0OiAyLjNyZW07XG4gIH1cbiAgLmhvbWVfX3Njcm9sbF9fc3ZnIC5zY3JvbGxfX3N2Z19faW5uZXIge1xuICAgIHdpZHRoOiAycmVtO1xuICB9XG4gIC5ob21lX19zY3JvbGxfX3N2ZyAuc2Nyb2xsX19zdmdfX291dGVyIHtcbiAgICB3aWR0aDogNnJlbTtcbiAgfVxuICAuaG9tZV9fc2Nyb2xsX19zdmcgLnNjcm9sbF9fc3ZnX19hcnJvdyB7XG4gICAgd2lkdGg6IDNyZW07XG4gIH1cbn1cblxuLnNjcm9sbF9fc3ZnX19jb250YWluZXIsXG4uc2Nyb2xsX19zdmdfX2Fycm93LFxuLm5hdmlnYXRlX19zdmdfX2NvbnRhaW5lcixcbi5uYXZpZ2F0ZV9fdG9fX3N2ZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5zY3JvbGxfX3N2Z19faW5uZXIsXG4uc2Nyb2xsX19zdmdfX291dGVyLFxuLnNjcm9sbF9fc3ZnX19hcnJvdyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm5hdmlnYXRlX190b19fc3ZnIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBnYXA6IDEuODVyZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnNjcm9sbF9fc3ZnX19pbm5lcixcbi5uYXZpZ2F0ZV9fc3ZnX19pbm5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLnNjcm9sbF9fc3ZnX19vdXRlcixcbi5uYXZpZ2F0ZV9fc3ZnX19vdXRlciB7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5ob21lX19hYm91dCAuaG9tZV9fYWJvdXRfX2Rlc2NyaXB0aW9uIHtcbiAgbWFyZ2luLWJsb2NrOiA0cmVtIDNyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogNC4ycmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ob21lX19hYm91dCAuaG9tZV9fYWJvdXRfX2Rlc2NyaXB0aW9uIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbi5ob21lX19zZWxlY3RlZF9fd29ya3Mge1xuICBtYXJnaW4tbGVmdDogMTEuNnJlbTtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDIzcHgpIHtcbiAgLmhvbWVfX3NlbGVjdGVkX193b3JrcyB7XG4gICAgbWFyZ2luLWxlZnQ6IDdyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fc2VsZWN0ZWRfX3dvcmtzIHtcbiAgICBtYXJnaW4tbGVmdDogMi4zcmVtO1xuICB9XG59XG4uaG9tZV9fc2VsZWN0ZWRfX3dvcmtzIC5zZWxlY3RlZF9fd29ya3NfX2hlYWRlciB7XG4gIG1hcmdpbi1ibG9jazogMTUuOHJlbSA5cmVtO1xuICBtYXJnaW4taW5saW5lOiBhdXRvO1xuICBwYWRkaW5nLXJpZ2h0OiAxMS42cmVtO1xuICB3aWR0aDogODMlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDEwLjJyZW07XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaG9tZV9fc2VsZWN0ZWRfX3dvcmtzIC5zZWxlY3RlZF9fd29ya3NfX2hlYWRlciB7XG4gICAgcGFkZGluZy1yaWdodDogMi4zcmVtO1xuICAgIGdhcDogNXJlbTtcbiAgfVxufVxuLmhvbWVfX3NlbGVjdGVkX193b3JrcyAuc2VsZWN0ZWRfX3dvcmtzX19oZWFkZXIgc3BhbiB7XG4gIGhlaWdodDogMC4wN3JlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyM3B4KSB7XG4gIC5ob21lX19zZWxlY3RlZF9fd29ya3MgLnNlbGVjdGVkX193b3Jrc19faGVhZGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLmhvbWVfX3NlbGVjdGVkX193b3JrcyAuc2VsZWN0ZWRfX3dvcmtzX193cmFwcGVyIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMi44cmVtO1xufVxuLmhvbWVfX3NlbGVjdGVkX193b3JrcyAuc2VsZWN0ZWRfX3dvcmtzX193cmFwcGVyIC5zZWxlY3RlZF9fd29ya3NfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBnYXA6IDEuNXJlbTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjc1cyBlYXNlLW91dDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNzVzIGVhc2Utb3V0O1xuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC43NXMgZWFzZS1vdXQ7XG4gIC1tcy10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNzVzIGVhc2Utb3V0O1xuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNzVzIGVhc2Utb3V0O1xufVxuLmhvbWVfX3NlbGVjdGVkX193b3JrcyAuc2VsZWN0ZWRfX3dvcmtzX193cmFwcGVyIC5zZWxlY3RlZF9fd29ya3NfX2l0ZW06bnRoLWNoaWxkKG9kZCkge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG59XG4uaG9tZV9fc2VsZWN0ZWRfX3dvcmtzIC5zZWxlY3RlZF9fd29ya3NfX3dyYXBwZXIgLnNlbGVjdGVkX193b3Jrc19faXRlbSAuc2VsZWN0ZWRfX3dvcmtzX190aXRsZSB7XG4gIGxpbmUtaGVpZ2h0OiAwLjgzO1xufVxuXG4uaG9tZV9fY29udGFjdCB7XG4gIG1hcmdpbi1ibG9jazogMTcuNHJlbSA4LjFyZW07XG4gIG1hcmdpbi1pbmxpbmU6IDExLjZyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAuaG9tZV9fY29udGFjdCB7XG4gICAgbWFyZ2luLWlubGluZTogN3JlbTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ob21lX19jb250YWN0IHtcbiAgICBtYXJnaW4taW5saW5lOiAyLjNyZW07XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG59XG4uaG9tZV9fY29udGFjdF9faW1hZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA0OC41cmVtO1xufVxuLmhvbWVfX2NvbnRhY3QgLmhvbWVfX2NvbnRhY3RfX3RleHQge1xuICBwYWRkaW5nLWJsb2NrOiAzcmVtIDVyZW07XG59XG4uaG9tZV9fY29udGFjdCAuc2VydmljZXNfX2xpc3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1ibG9jazogMnJlbSAzcmVtO1xufSIsIkB1c2UgJy4uL3V0aWxzL3Jlc3BvbnNpdmUuc2NzcycgYXMgKjtcblxuJWRlc2NyaXB0aW9uLTEzIHtcblx0Zm9udC1zaXplOiAxLjIycmVtO1xuXHRsaW5lLWhlaWdodDogMS4yOTtcblxuXHRAaW5jbHVkZSBtZWRpYSgnPHRhYmxldCcpIHtcblx0XHRmb250LXNpemU6IDEuN3JlbTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0Zm9udC1zaXplOiAxLjNyZW07XG5cdH1cbn1cblxuJWRlc2NyaXB0aW9uLTE5IHtcblx0Zm9udC1zaXplOiAxLjhyZW07XG5cdGxpbmUtaGVpZ2h0OiAxLjI4O1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8dGFibGV0Jykge1xuXHRcdGZvbnQtc2l6ZTogMi4ycmVtO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEoJz50YWJsZXQnKSB7XG5cdFx0Ly8gcHJldHRpZXItaWdub3JlXG5cdFx0Zm9udC1zaXplOiAxNnB4O1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcblx0XHRmb250LXNpemU6IDEuM3JlbTtcblx0fVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLyAgICAgXyAgICAgICAgICAgIF8gICAgICAgICAgIF8gICAgICAgICAgICAgICAgICAgICAgICAgICBfIF9cbi8vICAgIChfKSAgICAgICAgICB8IHwgICAgICAgICB8IHwgICAgICAgICAgICAgICAgICAgICAgICAgfCAoXylcbi8vICAgICBfIF8gX18gICBfX198IHxfICAgXyAgX198IHwgX19fICAgXyBfXyBfX18gICBfX18gIF9ffCB8XyAgX18gX1xuLy8gICAgfCB8ICdfIFxcIC8gX198IHwgfCB8IHwvIF9gIHwvIF8gXFwgfCAnXyBgIF8gXFwgLyBfIFxcLyBfYCB8IHwvIF9gIHxcbi8vICAgIHwgfCB8IHwgfCAoX198IHwgfF98IHwgKF98IHwgIF9fLyB8IHwgfCB8IHwgfCAgX18vIChffCB8IHwgKF98IHxcbi8vICAgIHxffF98IHxffFxcX19ffF98XFxfXyxffFxcX18sX3xcXF9fX3wgfF98IHxffCB8X3xcXF9fX3xcXF9fLF98X3xcXF9fLF98XG4vL1xuLy8gICAgICBTaW1wbGUsIGVsZWdhbnQgYW5kIG1haW50YWluYWJsZSBtZWRpYSBxdWVyaWVzIGluIFNhc3Ncbi8vICAgICAgICAgICAgICAgICAgICAgICAgdjEuNC45XG4vL1xuLy8gICAgICAgIGh0dHBzOi8vZWR1YXJkb2JvdWNhcy5naXRodWIuaW8vaW5jbHVkZS1tZWRpYVxuLy9cbi8vICAgICAgICAgQXV0aG9yczogRWR1YXJkbyBCb3VjYXMgKEBlZHVhcmRvYm91Y2FzKVxuLy8gICAgICAgICAgICAgICAgICBLaXR0eSBHaXJhdWRlbCAoQGtpdHR5Z2lyYXVkZWwpXG4vL1xuLy8gICAgICBUaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBNSVQgbGljZW5zZVxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgbGlicmFyeSBwdWJsaWMgY29uZmlndXJhdGlvblxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4vLy8gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcbi8vL1xuJGJyZWFrcG9pbnRzOiAoXG4gICdwaG9uZSc6IDMyMHB4LFxuICAndGFibGV0JzogNzY4cHgsXG4gICdkZXNrdG9wJzogMTAyNHB4XG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgbWVkaWEgdHlwZSAoc2NyZWVuKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzdGF0aWMgZXhwcmVzc2lvbiB3aXRoIGxvZ2ljYWwgZGlzanVuY3Rpb24gKE9SIG9wZXJhdG9yKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6IChcbi8vLyAgICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbi8vLyAgKTtcbi8vL1xuJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gICdzY3JlZW4nOiAnc2NyZWVuJyxcbiAgJ3ByaW50JzogJ3ByaW50JyxcbiAgJ2hhbmRoZWxkJzogJ2hhbmRoZWxkJyxcbiAgJ2xhbmRzY2FwZSc6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknLFxuICAncG9ydHJhaXQnOiAnKG9yaWVudGF0aW9uOiBwb3J0cmFpdCknLFxuICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCknLFxuICAncmV0aW5hM3gnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMyksIChtaW4tcmVzb2x1dGlvbjogMzUwZHBpKSwgKG1pbi1yZXNvbHV0aW9uOiAzZHBweCknXG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIERlZmluZXMgYSBudW1iZXIgdG8gYmUgYWRkZWQgb3Igc3VidHJhY3RlZCBmcm9tIGVhY2ggdW5pdCB3aGVuIGRlY2xhcmluZyBicmVha3BvaW50cyB3aXRoIGV4Y2x1c2l2ZSBpbnRlcnZhbHNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcGl4ZWxzIGlzIGRlZmluZWQgYXMgYDFgIGJ5IGRlZmF1bHRcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz4xMjhweCcpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMTI5cHgpIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIGVtcyBpcyBkZWZpbmVkIGFzIGAwLjAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MjBlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMjAuMDFlbSkge31cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBJbnRlcnZhbCBmb3IgcmVtcyBpcyBkZWZpbmVkIGFzIGAwLjFgIGJ5IGRlZmF1bHQsIHRvIGJlIHVzZWQgd2l0aCBgZm9udC1zaXplOiA2Mi41JTtgXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+Mi4wcmVtJykge31cbi8vL1xuLy8vICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gIEBtZWRpYSAobWluLXdpZHRoOiAyLjFyZW0pIHt9XG4vLy9cbiR1bml0LWludGVydmFsczogKFxuICAncHgnOiAxLFxuICAnZW0nOiAwLjAxLFxuICAncmVtJzogMC4xLFxuICAnJzogMFxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gRGVmaW5lcyB3aGV0aGVyIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgYXZhaWxhYmxlLCB1c2VmdWwgZm9yIGNyZWF0aW5nIHNlcGFyYXRlIHN0eWxlc2hlZXRzXG4vLy8gZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBtZWRpYSBxdWVyaWVzLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIERpc2FibGVzIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4kaW0tbWVkaWEtc3VwcG9ydDogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBicmVha3BvaW50IHRvIGVtdWxhdGUgd2hlbiBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGRpc2FibGVkLiBNZWRpYSBxdWVyaWVzIHRoYXQgc3RhcnQgYXQgb3Jcbi8vLyBpbnRlcmNlcHQgdGhlIGJyZWFrcG9pbnQgd2lsbCBiZSBkaXNwbGF5ZWQsIGFueSBvdGhlcnMgd2lsbCBiZSBpZ25vcmVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGRvZXMgbm90IGludGVyY2VwdCB0aGUgZGVza3RvcCBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICd0YWJsZXQnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj1kZXNrdG9wJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJyAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBtZWRpYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBpbiBhbiBleHByZXNzaW9uIGZvciBpdCB0byBiZSB1c2VkIHdoZW4gbWVkaWEgcXVlcmllc1xuLy8vIGFyZSBub3Qgc3VwcG9ydGVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYW5kIGNvbnRhaW5zIG9ubHkgYWNjZXB0ZWQgbWVkaWEgZXhwcmVzc2lvbnNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdzY3JlZW4nKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBidXQgY29udGFpbnMgYSBtZWRpYSBleHByZXNzaW9uIHRoYXQgaXMgbm90IGFjY2VwdGVkXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAncmV0aW5hMngnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJywgJ3BvcnRyYWl0JywgJ2xhbmRzY2FwZScpICFkZWZhdWx0O1xuXG4vLy8vXG4vLy8gQ3Jvc3MtZW5naW5lIGxvZ2dpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBLaXR0eSBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIExvZyBhIG1lc3NhZ2UgZWl0aGVyIHdpdGggYEBlcnJvcmAgaWYgc3VwcG9ydGVkXG4vLy8gZWxzZSB3aXRoIGBAd2FybmAsIHVzaW5nIGBmZWF0dXJlLWV4aXN0cygnYXQtZXJyb3InKWBcbi8vLyB0byBkZXRlY3Qgc3VwcG9ydC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBmdW5jdGlvbiBpbS1sb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpIHtcbiAgICBAZXJyb3IgJG1lc3NhZ2U7XG4gIH0gQGVsc2Uge1xuICAgIEB3YXJuICRtZXNzYWdlO1xuICAgICRfOiBub29wKCk7XG4gIH1cblxuICBAcmV0dXJuICRtZXNzYWdlO1xufVxuXG5cbi8vL1xuLy8vIFdyYXBwZXIgbWl4aW4gZm9yIHRoZSBsb2cgZnVuY3Rpb24gc28gaXQgY2FuIGJlIHVzZWQgd2l0aCBhIG1vcmUgZnJpZW5kbHlcbi8vLyBBUEkgdGhhbiBgQGlmIGltLWxvZygnLi4nKSB7fWAgb3IgYCRfOiBpbS1sb2coJy4uJylgLiBCYXNpY2FsbHksIHVzZSB0aGUgZnVuY3Rpb25cbi8vLyB3aXRoaW4gZnVuY3Rpb25zIGJlY2F1c2UgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbiBhIGZ1bmN0aW9uXG4vLy8gYW5kIHVzZSB0aGUgbWl4aW4gZXZlcnl3aGVyZSBlbHNlIGJlY2F1c2UgaXQncyBtdWNoIG1vcmUgZWxlZ2FudC5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbWVzc2FnZSAtIE1lc3NhZ2UgdG8gbG9nXG4vLy9cbkBtaXhpbiBsb2coJG1lc3NhZ2UpIHtcbiAgQGlmIGltLWxvZygkbWVzc2FnZSkge31cbn1cblxuXG4vLy9cbi8vLyBGdW5jdGlvbiB3aXRoIG5vIGBAcmV0dXJuYCBjYWxsZWQgbmV4dCB0byBgQHdhcm5gIGluIFNhc3MgMy4zXG4vLy8gdG8gdHJpZ2dlciBhIGNvbXBpbGluZyBlcnJvciBhbmQgc3RvcCB0aGUgcHJvY2Vzcy5cbi8vL1xuQGZ1bmN0aW9uIG5vb3AoKSB7fVxuXG4vLy9cbi8vLyBEZXRlcm1pbmVzIHdoZXRoZXIgYSBsaXN0IG9mIGNvbmRpdGlvbnMgaXMgaW50ZXJjZXB0ZWQgYnkgdGhlIHN0YXRpYyBicmVha3BvaW50LlxuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEByZXR1cm4ge0Jvb2xlYW59IC0gUmV0dXJucyB0cnVlIGlmIHRoZSBjb25kaXRpb25zIGFyZSBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vL1xuQGZ1bmN0aW9uIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pIHtcbiAgJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludCk7XG5cbiAgQGlmIG5vdCAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSB7XG4gICAgQGlmIGltLWxvZygnYCN7JGltLW5vLW1lZGlhLWJyZWFrcG9pbnR9YCBpcyBub3QgYSB2YWxpZCBicmVha3BvaW50LicpIHt9XG4gIH1cblxuICBAZWFjaCAkY29uZGl0aW9uIGluICRjb25kaXRpb25zIHtcbiAgICBAaWYgbm90IG1hcC1oYXMta2V5KCRtZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkY29uZGl0aW9uKTtcbiAgICAgICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAgICAgJHZhbHVlOiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkY29uZGl0aW9uLCAkb3BlcmF0b3IpO1xuXG4gICAgICBAaWYgKCRwcmVmaXggPT0gJ21heCcgYW5kICR2YWx1ZSA8PSAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkgb3JcbiAgICAgICAgICAoJHByZWZpeCA9PSAnbWluJyBhbmQgJHZhbHVlID4gJG5vLW1lZGlhLWJyZWFrcG9pbnQtdmFsdWUpIHtcbiAgICAgICAgQHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmIG5vdCBpbmRleCgkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnMsICRjb25kaXRpb24pIHtcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiB0cnVlO1xufVxuXG4vLy8vXG4vLy8gUGFyc2luZyBlbmdpbmVcbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gR2V0IG9wZXJhdG9yIG9mIGFuIGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBvcGVyYXRvciBmcm9tXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gQW55IG9mIGA+PWAsIGA+YCwgYDw9YCwgYDxgLCBg4omlYCwgYOKJpGBcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRleHByZXNzaW9uKSB7XG4gIEBlYWNoICRvcGVyYXRvciBpbiAoJz49JywgJz4nLCAnPD0nLCAnPCcsICfiiaUnLCAn4omkJykge1xuICAgIEBpZiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAgICAgQHJldHVybiAkb3BlcmF0b3I7XG4gICAgfVxuICB9XG5cbiAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAvLyByZWx5IG9uIHRoZSBgaW0tbG9nKC4uKWAgZnVuY3Rpb24gcmF0aGVyIHRoYW4gdGhlIGBsb2coLi4pYCBtaXhpbi4gQmVjYXVzZVxuICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgLy8gU2FzcyAzLjMsIGNoYW5nZSB0aGlzIGxpbmUgaW4gYEBpZiBpbS1sb2coLi4pIHt9YCBpbnN0ZWFkLlxuICAkXzogaW0tbG9nKCdObyBvcGVyYXRvciBmb3VuZCBpbiBgI3skZXhwcmVzc2lvbn1gLicpO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IGRpbWVuc2lvbiBmcm9tXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRvcGVyYXRvciAtIE9wZXJhdG9yIGZyb20gYCRleHByZXNzaW9uYFxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGB3aWR0aGAgb3IgYGhlaWdodGAgKG9yIHBvdGVudGlhbGx5IGFueXRoaW5nIGVsc2UpXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcikge1xuICAkb3BlcmF0b3ItaW5kZXg6IHN0ci1pbmRleCgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHBhcnNlZC1kaW1lbnNpb246IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgMCwgJG9wZXJhdG9yLWluZGV4IC0gMSk7XG4gICRkaW1lbnNpb246ICd3aWR0aCc7XG5cbiAgQGlmIHN0ci1sZW5ndGgoJHBhcnNlZC1kaW1lbnNpb24pID4gMCB7XG4gICAgJGRpbWVuc2lvbjogJHBhcnNlZC1kaW1lbnNpb247XG4gIH1cblxuICBAcmV0dXJuICRkaW1lbnNpb247XG59XG5cblxuLy8vXG4vLy8gR2V0IGRpbWVuc2lvbiBwcmVmaXggYmFzZWQgb24gYW4gb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvclxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIGBtaW5gIG9yIGBtYXhgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1wcmVmaXgoJG9wZXJhdG9yKSB7XG4gIEByZXR1cm4gaWYoaW5kZXgoKCc8JywgJzw9JywgJ+KJpCcpLCAkb3BlcmF0b3IpLCAnbWF4JywgJ21pbicpO1xufVxuXG5cbi8vL1xuLy8vIEdldCB2YWx1ZSBvZiBhbiBleHByZXNzaW9uLCBiYXNlZCBvbiBhIGZvdW5kIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3QgdmFsdWUgZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBBIG51bWVyaWMgdmFsdWVcbi8vL1xuQGZ1bmN0aW9uIGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICR2YWx1ZTogc3RyLXNsaWNlKCRleHByZXNzaW9uLCAkb3BlcmF0b3ItaW5kZXggKyBzdHItbGVuZ3RoKCRvcGVyYXRvcikpO1xuXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICR2YWx1ZSkge1xuICAgICR2YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICR2YWx1ZSk7XG4gIH0gQGVsc2Uge1xuICAgICR2YWx1ZTogdG8tbnVtYmVyKCR2YWx1ZSk7XG4gIH1cblxuICAkaW50ZXJ2YWw6IG1hcC1nZXQoJHVuaXQtaW50ZXJ2YWxzLCB1bml0KCR2YWx1ZSkpO1xuXG4gIEBpZiBub3QgJGludGVydmFsIHtcbiAgICAvLyBJdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluc2lkZSBhIGZ1bmN0aW9uLCBzbyB3ZSBoYXZlIHRvXG4gICAgLy8gcmVseSBvbiB0aGUgYGltLWxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgICAvLyBmdW5jdGlvbnMgY2Fubm90IGJlIGNhbGxlZCBhbnl3aGVyZSBpbiBTYXNzLCB3ZSBuZWVkIHRvIGhhY2sgdGhlIGNhbGwgaW5cbiAgICAvLyBhIGR1bW15IHZhcmlhYmxlLCBzdWNoIGFzIGAkX2AuIElmIGFueWJvZHkgZXZlciByYWlzZSBhIHNjb3BpbmcgaXNzdWUgd2l0aFxuICAgIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgaW0tbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgICAkXzogaW0tbG9nKCdVbmtub3duIHVuaXQgYCN7dW5pdCgkdmFsdWUpfWAuJyk7XG4gIH1cblxuICBAaWYgJG9wZXJhdG9yID09ICc+JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgKyAkaW50ZXJ2YWw7XG4gIH0gQGVsc2UgaWYgJG9wZXJhdG9yID09ICc8JyB7XG4gICAgJHZhbHVlOiAkdmFsdWUgLSAkaW50ZXJ2YWw7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZTtcbn1cblxuXG4vLy9cbi8vLyBQYXJzZSBhbiBleHByZXNzaW9uIHRvIHJldHVybiBhIHZhbGlkIG1lZGlhLXF1ZXJ5IGV4cHJlc3Npb25cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gcGFyc2Vcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBWYWxpZCBtZWRpYSBxdWVyeVxuLy8vXG5AZnVuY3Rpb24gcGFyc2UtZXhwcmVzc2lvbigkZXhwcmVzc2lvbikge1xuICAvLyBJZiBpdCBpcyBwYXJ0IG9mICRtZWRpYS1leHByZXNzaW9ucywgaXQgaGFzIG5vIG9wZXJhdG9yXG4gIC8vIHRoZW4gdGhlcmUgaXMgbm8gbmVlZCB0byBnbyBhbnkgZnVydGhlciwganVzdCByZXR1cm4gdGhlIHZhbHVlXG4gIEBpZiBtYXAtaGFzLWtleSgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKSB7XG4gICAgQHJldHVybiBtYXAtZ2V0KCRtZWRpYS1leHByZXNzaW9ucywgJGV4cHJlc3Npb24pO1xuICB9XG5cbiAgJG9wZXJhdG9yOiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbik7XG4gICRkaW1lbnNpb246IGdldC1leHByZXNzaW9uLWRpbWVuc2lvbigkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKTtcbiAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICR2YWx1ZTogZ2V0LWV4cHJlc3Npb24tdmFsdWUoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG5cbiAgQHJldHVybiAnKCN7JHByZWZpeH0tI3skZGltZW5zaW9ufTogI3skdmFsdWV9KSc7XG59XG5cbi8vL1xuLy8vIFNsaWNlIGAkbGlzdGAgYmV0d2VlbiBgJHN0YXJ0YCBhbmQgYCRlbmRgIGluZGV4ZXNcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkbGlzdCAtIExpc3QgdG8gc2xpY2Vcbi8vLyBAcGFyYW0ge051bWJlcn0gJHN0YXJ0IFsxXSAtIFN0YXJ0IGluZGV4XG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRlbmQgW2xlbmd0aCgkbGlzdCldIC0gRW5kIGluZGV4XG4vLy9cbi8vLyBAcmV0dXJuIHtMaXN0fSBTbGljZWQgbGlzdFxuLy8vXG5AZnVuY3Rpb24gc2xpY2UoJGxpc3QsICRzdGFydDogMSwgJGVuZDogbGVuZ3RoKCRsaXN0KSkge1xuICBAaWYgbGVuZ3RoKCRsaXN0KSA8IDEgb3IgJHN0YXJ0ID4gJGVuZCB7XG4gICAgQHJldHVybiAoKTtcbiAgfVxuXG4gICRyZXN1bHQ6ICgpO1xuXG4gIEBmb3IgJGkgZnJvbSAkc3RhcnQgdGhyb3VnaCAkZW5kIHtcbiAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgbnRoKCRsaXN0LCAkaSkpO1xuICB9XG5cbiAgQHJldHVybiAkcmVzdWx0O1xufVxuXG4vLy8vXG4vLy8gU3RyaW5nIHRvIG51bWJlciBjb252ZXJ0ZXJcbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gQ2FzdHMgYSBzdHJpbmcgaW50byBhIG51bWJlclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGJlIHBhcnNlZFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfVxuLy8vXG5AZnVuY3Rpb24gdG8tbnVtYmVyKCR2YWx1ZSkge1xuICBAaWYgdHlwZS1vZigkdmFsdWUpID09ICdudW1iZXInIHtcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgIT0gJ3N0cmluZycge1xuICAgICRfOiBpbS1sb2coJ1ZhbHVlIGZvciBgdG8tbnVtYmVyYCBzaG91bGQgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gIH1cblxuICAkZmlyc3QtY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAxLCAxKTtcbiAgJHJlc3VsdDogMDtcbiAgJGRpZ2l0czogMDtcbiAgJG1pbnVzOiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpO1xuICAkbnVtYmVyczogKCcwJzogMCwgJzEnOiAxLCAnMic6IDIsICczJzogMywgJzQnOiA0LCAnNSc6IDUsICc2JzogNiwgJzcnOiA3LCAnOCc6IDgsICc5JzogOSk7XG5cbiAgLy8gUmVtb3ZlICsvLSBzaWduIGlmIHByZXNlbnQgYXQgZmlyc3QgY2hhcmFjdGVyXG4gIEBpZiAoJGZpcnN0LWNoYXJhY3RlciA9PSAnKycgb3IgJGZpcnN0LWNoYXJhY3RlciA9PSAnLScpIHtcbiAgICAkdmFsdWU6IHN0ci1zbGljZSgkdmFsdWUsIDIpO1xuICB9XG5cbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCBzdHItbGVuZ3RoKCR2YWx1ZSkge1xuICAgICRjaGFyYWN0ZXI6IHN0ci1zbGljZSgkdmFsdWUsICRpLCAkaSk7XG5cbiAgICBAaWYgbm90IChpbmRleChtYXAta2V5cygkbnVtYmVycyksICRjaGFyYWN0ZXIpIG9yICRjaGFyYWN0ZXIgPT0gJy4nKSB7XG4gICAgICBAcmV0dXJuIHRvLWxlbmd0aChpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KSwgc3RyLXNsaWNlKCR2YWx1ZSwgJGkpKVxuICAgIH1cblxuICAgIEBpZiAkY2hhcmFjdGVyID09ICcuJyB7XG4gICAgICAkZGlnaXRzOiAxO1xuICAgIH0gQGVsc2UgaWYgJGRpZ2l0cyA9PSAwIHtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKiAxMCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJGRpZ2l0czogJGRpZ2l0cyAqIDEwO1xuICAgICAgJHJlc3VsdDogJHJlc3VsdCArIG1hcC1nZXQoJG51bWJlcnMsICRjaGFyYWN0ZXIpIC8gJGRpZ2l0cztcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIGlmKCRtaW51cywgLSRyZXN1bHQsICRyZXN1bHQpO1xufVxuXG5cbi8vL1xuLy8vIEFkZCBgJHVuaXRgIHRvIGAkdmFsdWVgXG4vLy9cbi8vLyBAcGFyYW0ge051bWJlcn0gJHZhbHVlIC0gVmFsdWUgdG8gYWRkIHVuaXQgdG9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHVuaXQgLSBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHVuaXRcbi8vL1xuLy8vIEByZXR1cm4ge051bWJlcn0gLSBgJHZhbHVlYCBleHByZXNzZWQgaW4gYCR1bml0YFxuLy8vXG5AZnVuY3Rpb24gdG8tbGVuZ3RoKCR2YWx1ZSwgJHVuaXQpIHtcbiAgJHVuaXRzOiAoJ3B4JzogMXB4LCAnY20nOiAxY20sICdtbSc6IDFtbSwgJyUnOiAxJSwgJ2NoJzogMWNoLCAncGMnOiAxcGMsICdpbic6IDFpbiwgJ2VtJzogMWVtLCAncmVtJzogMXJlbSwgJ3B0JzogMXB0LCAnZXgnOiAxZXgsICd2dyc6IDF2dywgJ3ZoJzogMXZoLCAndm1pbic6IDF2bWluLCAndm1heCc6IDF2bWF4KTtcblxuICBAaWYgbm90IGluZGV4KG1hcC1rZXlzKCR1bml0cyksICR1bml0KSB7XG4gICAgJF86IGltLWxvZygnSW52YWxpZCB1bml0IGAjeyR1bml0fWAuJyk7XG4gIH1cblxuICBAcmV0dXJuICR2YWx1ZSAqIG1hcC1nZXQoJHVuaXRzLCAkdW5pdCk7XG59XG5cbi8vL1xuLy8vIFRoaXMgbWl4aW4gYWltcyBhdCByZWRlZmluaW5nIHRoZSBjb25maWd1cmF0aW9uIGp1c3QgZm9yIHRoZSBzY29wZSBvZlxuLy8vIHRoZSBjYWxsLiBJdCBpcyBoZWxwZnVsIHdoZW4gaGF2aW5nIGEgY29tcG9uZW50IG5lZWRpbmcgYW4gZXh0ZW5kZWRcbi8vLyBjb25maWd1cmF0aW9uIHN1Y2ggYXMgY3VzdG9tIGJyZWFrcG9pbnRzIChyZWZlcnJlZCB0byBhcyB0d2Vha3BvaW50cylcbi8vLyBmb3IgaW5zdGFuY2UuXG4vLy9cbi8vLyBAYXV0aG9yIEtpdHR5IEdpcmF1ZGVsXG4vLy9cbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrcG9pbnRzIFsoKV0gLSBNYXAgb2YgdHdlYWtwb2ludHMgdG8gYmUgbWVyZ2VkIHdpdGggYCRicmVha3BvaW50c2Bcbi8vLyBAcGFyYW0ge01hcH0gJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zIFsoKV0gLSBNYXAgb2YgdHdlYWtlZCBtZWRpYSBleHByZXNzaW9ucyB0byBiZSBtZXJnZWQgd2l0aCBgJG1lZGlhLWV4cHJlc3Npb25gXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgYnJlYWtwb2ludHMgd2l0aCBhIHR3ZWFrcG9pbnRcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PWN1c3RvbScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgdGhlIGdsb2JhbCBtZWRpYSBleHByZXNzaW9ucyB3aXRoIGEgY3VzdG9tIG9uZVxuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCBib3RoIGNvbmZpZ3VyYXRpb24gbWFwc1xuLy8vICBAaW5jbHVkZSBtZWRpYS1jb250ZXh0KCgnY3VzdG9tJzogNjc4cHgpLCAoJ2FsbCc6ICdhbGwnKSkge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgQGluY2x1ZGUgbWVkaWEoJ2FsbCcsICc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbkBtaXhpbiBtZWRpYS1jb250ZXh0KCR0d2Vha3BvaW50czogKCksICR0d2Vhay1tZWRpYS1leHByZXNzaW9uczogKCkpIHtcbiAgLy8gU2F2ZSBnbG9iYWwgY29uZmlndXJhdGlvblxuICAkZ2xvYmFsLWJyZWFrcG9pbnRzOiAkYnJlYWtwb2ludHM7XG4gICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnM6ICRtZWRpYS1leHByZXNzaW9ucztcblxuICAvLyBVcGRhdGUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiBtYXAtbWVyZ2UoJGJyZWFrcG9pbnRzLCAkdHdlYWtwb2ludHMpICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogbWFwLW1lcmdlKCRtZWRpYS1leHByZXNzaW9ucywgJHR3ZWFrLW1lZGlhLWV4cHJlc3Npb25zKSAhZ2xvYmFsO1xuXG4gIEBjb250ZW50O1xuXG4gIC8vIFJlc3RvcmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGJyZWFrcG9pbnRzOiAkZ2xvYmFsLWJyZWFrcG9pbnRzICFnbG9iYWw7XG4gICRtZWRpYS1leHByZXNzaW9uczogJGdsb2JhbC1tZWRpYS1leHByZXNzaW9ucyAhZ2xvYmFsO1xufVxuXG4vLy8vXG4vLy8gaW5jbHVkZS1tZWRpYSBwdWJsaWMgZXhwb3NlZCBBUElcbi8vLyBAYXV0aG9yIEVkdWFyZG8gQm91Y2FzXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLy9cblxuXG4vLy9cbi8vLyBHZW5lcmF0ZXMgYSBtZWRpYSBxdWVyeSBiYXNlZCBvbiBhIGxpc3Qgb2YgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHBhcmFtIHtBcmdsaXN0fSAgICRjb25kaXRpb25zICAtIE1lZGlhIHF1ZXJ5IGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGEgc2luZ2xlIHNldCBicmVha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIHR3byBzZXQgYnJlYWtwb2ludHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5waG9uZScsICc8PXRhYmxldCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggY3VzdG9tIHZhbHVlc1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNThweCcsICc8ODUwcHgnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIHNldCBicmVha3BvaW50cyB3aXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz5kZXNrdG9wJywgJzw9MTM1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHN0YXRpYyBleHByZXNzaW9uXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCdyZXRpbmEyeCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIE1peGluZyBldmVyeXRoaW5nXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PTM1MHB4JywgJzx0YWJsZXQnLCAncmV0aW5hM3gnKSB7IH1cbi8vL1xuQG1peGluIG1lZGlhKCRjb25kaXRpb25zLi4uKSB7XG4gIEBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPT0gMCkgb3JcbiAgICAgIChub3QgJGltLW1lZGlhLXN1cHBvcnQgYW5kIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH0gQGVsc2UgaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID4gMCkge1xuICAgIEBtZWRpYSAje3VucXVvdGUocGFyc2UtZXhwcmVzc2lvbihudGgoJGNvbmRpdGlvbnMsIDEpKSl9IHtcbiAgICAgIC8vIFJlY3Vyc2l2ZSBjYWxsXG4gICAgICBAaW5jbHVkZSBtZWRpYShzbGljZSgkY29uZGl0aW9ucywgMikuLi4pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJAdXNlICcuLi91dGlscy9yZXNwb25zaXZlLnNjc3MnIGFzICo7XG5cbiV0aXRsZS0xNTAge1xuXHRmb250LXNpemU6IDEzcmVtO1xuXHRsaW5lLWhlaWdodDogMS4wNDtcblxuXHRAaW5jbHVkZSBtZWRpYSgnPHRhYmxldCcpIHtcblx0XHRmb250LXNpemU6IDE4cmVtO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcblx0XHRmb250LXNpemU6IDUuNXJlbTtcblx0fVxufVxuXG4ldGl0bGUtNTcge1xuXHRmb250LXNpemU6IDUuN3JlbTtcblx0bGluZS1oZWlnaHQ6IDEuMDQ7XG5cblx0QGluY2x1ZGUgbWVkaWEoJzx0YWJsZXQnKSB7XG5cdFx0Zm9udC1zaXplOiA2LjhyZW07XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xuXHRcdGZvbnQtc2l6ZTogMi41cmVtO1xuXHR9XG59XG5cbiV0aXRsZS0yOCB7XG5cdGZvbnQtc2l6ZTogMi44cmVtO1xuXHRsaW5lLWhlaWdodDogMS4wNDtcblxuXHRAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xuXHRcdGZvbnQtc2l6ZTogMS44cmVtO1xuXHR9XG59XG4iLCJAdXNlICcuLi91dGlscy92YXJpYWJsZXMuc2NzcycgYXMgKjtcclxuXHJcbkBmb250LWZhY2Uge1xyXG5cdGZvbnQtZmFtaWx5OiAkZm9udC1ub3RvLXNhbnM7XHJcblx0c3JjOiB1cmwoJy4uL3N0YXRpYy9mb250cy9Ob3RvU2VyaWZEaXNwbGF5LUxpZ2h0LnR0ZicpO1xyXG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xyXG5cdGZvbnQtZGlzcGxheTogc3dhcDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcblx0Zm9udC1mYW1pbHk6ICRmb250LWthcmE7XHJcblx0c3JjOiB1cmwoJy4uL3N0YXRpYy9mb250cy9LYXJsYS1MaWdodC50dGYnKTtcclxuXHRmb250LXdlaWdodDogbm9ybWFsO1xyXG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHRmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuIiwiJGZvbnQtbm90by1zYW5zOiAnTm90byBTYW5zJztcbiRmb250LWthcmE6ICdLYXJhJztcblxuJGZhd246ICNjZmI0N2M7XG4kZ3JleS1jaGF0ZWF1OiAjYTdhN2E3O1xuXG4kei1pbmRleGVzOiAoXG5cdCdwcmVsb2FkZXInLFxuXHQndHJhbnNpdGlvbicsXG5cdCduYXZpZ2F0aW9uJyxcblx0J2NvbnRlbnQnLFxuXHQnY2lyY2xlcycsXG5cdCdjYW52YXMnXG4pO1xuIiwiQHVzZSAnLi4vc2hhcmVkL2Rlc2NyaXB0aW9uLnNjc3MnIGFzICo7XG5AdXNlICcuLi9zaGFyZWQvdGl0bGVzLnNjc3MnIGFzICo7XG5cbkB1c2UgJy4uL3V0aWxzL3Jlc3BvbnNpdmUuc2NzcycgYXMgKjtcblxuQHVzZSAnLi4vdXRpbHMvdmFyaWFibGVzLnNjc3MnIGFzICo7XG5AdXNlICcuL2ZvbnRzLnNjc3MnIGFzICo7XG5cbi8vISBUT0RPIEFOSU1BVElPTiBTVFJPS0VcblxuKiB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG5cdGZvbnQtc2l6ZTogY2FsYygxMDB2dyAvIDE0NDAgKiAxMCk7XG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0Zm9udC1zaXplOiBjYWxjKDEwMHZ3IC8gNDIyICogMTApO1xuXHR9XG5cdC8vIG92ZXJmbG93OiBoaWRkZW47XG5cdC8vIHBvc2l0aW9uOiBmaXhlZDtcblx0dGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuaHRtbCxcbmJvZHkge1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHdpZHRoOiAxMDAlO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xufVxuXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcblx0ZGlzcGxheTogbm9uZTtcblx0d2lkdGg6IDA7XG59XG5cbjo6c2VsZWN0aW9uIHtcblx0Y29sb3I6ICM5Nzk3OTc7XG59XG5cbnVsLFxubWVudSB7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG5cblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuc3BhbiB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1rYXJhO1xuXHRAZXh0ZW5kICVkZXNjcmlwdGlvbi0xMztcbn1cblxuYSB7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0Y29sb3I6ICMwMDA7XG59XG5cbmgxLFxuaDEgc3BhbiB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1ub3RvLXNhbnM7XG5cdEBleHRlbmQgJXRpdGxlLTE1MDtcbn1cblxuaDIsXG5oMiBzcGFuIHtcblx0Zm9udC1mYW1pbHk6ICRmb250LW5vdG8tc2Fucztcblx0QGV4dGVuZCAldGl0bGUtNTc7XG59XG5cbmgzLFxuaDQsXG5oMyBzcGFuLFxuaDQgc3BhbiB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1ub3RvLXNhbnM7XG5cdEBleHRlbmQgJXRpdGxlLTI4O1xufVxuXG5wLFxuYSxcbnAgc3BhbixcbmEgc3BhbiB7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1rYXJhO1xuXHRAZXh0ZW5kICVkZXNjcmlwdGlvbi0xOTtcbn1cbiIsIiVsaW5rLWhvdmVyIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG5cdCY6OmJlZm9yZSB7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGJvdHRvbTogMDtcblx0XHRsZWZ0OiAwO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0aGVpZ2h0OiAwLjFyZW07XG5cdFx0dHJhbnNmb3JtOiBzY2FsZVgoMCk7XG5cdFx0dHJhbnNmb3JtLW9yaWdpbjogcmlnaHQ7XG5cdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcblx0XHQtd2Via2l0LXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG5cdFx0LW1vei10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuXHRcdC1tcy10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuXHRcdC1vLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG5cdH1cblxuXHQmOmhvdmVyOjpiZWZvcmUge1xuXHRcdHRyYW5zZm9ybTogc2NhbGVYKDEpO1xuXHRcdHRyYW5zZm9ybS1vcmlnaW46IGxlZnQ7XG5cdH1cbn1cbiVuYXZpZ2F0ZV9faG92ZXIge1xuXHQubmF2aWdhdGVfX3N2Z19fb3V0ZXIsXG5cdC5saW5lLS1vZmZzZXQge1xuXHRcdHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjQ1cyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpLFxuXHRcdFx0c3Ryb2tlLWRhc2hvZmZzZXQgMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcblx0XHQvL2FuaW1hdGlvbjogZmlsbCA4MDBtcyBlYXNlLW91dDtcblx0XHQvL2FuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuXHRcdC8vLXdlYmtpdC1hbmltYXRpb246IGZpbGwgODAwbXMgZWFzZS1vdXQ7XG5cdFx0LXdlYmtpdC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKSxcblx0XHRcdHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG5cdFx0LW1vei10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKSxcblx0XHRcdHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG5cdFx0LW1zLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjQ1cyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpLFxuXHRcdFx0c3Ryb2tlLWRhc2hvZmZzZXQgMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcblx0XHQtby10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40NXMgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKSxcblx0XHRcdHN0cm9rZS1kYXNob2Zmc2V0IDAuNDVzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG5cdH1cblxuXHQubGluZS0tb2Zmc2V0IHtcblx0XHRzdHJva2UtZGFzaGFycmF5OiAxMDA7XG5cdFx0c3Ryb2tlLWRhc2hvZmZzZXQ6IDEwMDtcblx0fVxuXG5cdCY6aG92ZXIge1xuXHRcdC5uYXZpZ2F0ZV9fc3ZnX19vdXRlciB7XG5cdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG5cdFx0fVxuXG5cdFx0LmxpbmUtLW9mZnNldCB7XG5cdFx0XHRzdHJva2UtZGFzaG9mZnNldDogMTA7XG5cdFx0fVxuXHR9XG59XG4iLCJAdXNlICcuLi9zaGFyZWQvZGVzY3JpcHRpb24uc2NzcycgYXMgKjtcbkB1c2UgJy4uL3NoYXJlZC9saW5rcy5zY3NzJyBhcyAqO1xuQHVzZSAnLi4vdXRpbHMvcmVzcG9uc2l2ZS5zY3NzJyBhcyAqO1xuXG4ubmF2aWdhdGlvbiB7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGdhcDogMy4xcmVtO1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdG1hcmdpbi1ib3R0b206IDhyZW07XG5cdHBhZGRpbmctYmxvY2s6IDM0cHggMDtcblx0cGFkZGluZy1pbmxpbmU6IDExLjhyZW07XG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0cGFkZGluZy1pbmxpbmU6IDIuM3JlbTtcblx0fVxuXG5cdCZfX2NvbnRhaW5lciB7XG5cdFx0Z2FwOiAzLjFyZW07XG5cdH1cblxuXHQubmF2aWdhdGlvbl9faXRlbV9fbGluayB7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuXHRcdCY6bm90KC5idG4tLWN0byBhKSB7XG5cdFx0XHRAZXh0ZW5kICVsaW5rLWhvdmVyO1xuXHRcdH1cblx0fVxuXG5cdC5uYXZpZ2F0aW9uX19pdGVtLmJ0bi0tY3RvIHtcblx0XHRwYWRkaW5nOiAwLjVyZW0gMS44cmVtO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0fVxuXG5cdC5idG5fX2N0b19fY29udGFpbmVyIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG5cdFx0c3ZnIHtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdGhlaWdodDogMTM1JTtcblx0XHR9XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xuXHRcdC5uYXZpZ2F0aW9uX19tZW51X193cmFwcGVyIHtcblx0XHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0fVxuXHR9XG59XG4iLCIvLyBTdHlsZVxuLnByZWxvYWRlciB7XG5cdHBvc2l0aW9uOiBmaXhlZDtcblx0dG9wOiAwO1xuXHRsZWZ0OiAwO1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDB2aDtcblx0YmFja2dyb3VuZC1jb2xvcjogcmdiKDc3LCAyNCwgMjQpO1xuXHR6LWluZGV4OiAxMDAwMDtcbn1cbiIsIkB1c2UgJy4uL3NoYXJlZC90aXRsZXMuc2NzcycgYXMgKjtcbkB1c2UgJy4uL3V0aWxzL3ZhcmlhYmxlcy5zY3NzJyBhcyAqO1xuQHVzZSAnLi4vdXRpbHMvcmVzcG9uc2l2ZS5zY3NzJyBhcyAqO1xuXG4uZm9vdGVyIHtcblx0YmFja2dyb3VuZC1jb2xvcjogIzAwMDtcblx0cGFkZGluZy1ibG9jazogNnJlbSAzcmVtO1xuXHRwYWRkaW5nLWxlZnQ6IDExLjVyZW07XG5cdGNvbG9yOiAjZmZmO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8dGFibGV0Jykge1xuXHRcdHBhZGRpbmctbGVmdDogN3JlbTtcblx0fVxuXG5cdC5mb290ZXJfX3RleHQge1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdH1cblxuXHQuZm9vdGVyX19jb250YWN0IHNwYW4ge1xuXHRcdGZvbnQtZmFtaWx5OiAkZm9udC1ub3RvLXNhbnM7XG5cdFx0QGV4dGVuZCAldGl0bGUtMTUwO1xuXHR9XG5cblx0LmZvb3Rlcl9fY29udGFjdCB7XG5cdFx0Y29sb3I6ICNmZmY7XG5cdFx0Zm9udC1mYW1pbHk6ICRmb250LW5vdG8tc2Fucztcblx0XHRAZXh0ZW5kICV0aXRsZS0xNTA7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRtYXJnaW4tYmxvY2s6IDZyZW0gNXJlbTtcblx0XHR0cmFuc2l0aW9uOiBjb2xvciAwLjQ1cyBlYXNlLW91dDtcblxuXHRcdCY6aG92ZXIge1xuXHRcdFx0Y29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41MDIpO1xuXHRcdH1cblxuXHRcdCY6OmFmdGVyIHtcblx0XHRcdGNvbnRlbnQ6ICcnO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0Ym90dG9tOiAwO1xuXHRcdFx0bGVmdDogMDtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0aGVpZ2h0OiAwLjNyZW07XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNjUpO1xuXHRcdH1cblx0fVxufVxuIiwiQHVzZSAnLi4vLi4vdXRpbHMvZnVuY3Rpb25zLnNjc3MnIGFzICo7XG5AdXNlICcuLi8uLi91dGlscy92YXJpYWJsZXMuc2NzcycgYXMgKjtcbkB1c2UgJy4uLy4uL3V0aWxzL3Jlc3BvbnNpdmUuc2NzcycgYXMgKjtcbkB1c2UgJy4uLy4uL3NoYXJlZC9saW5rcy5zY3NzJyBhcyAqO1xuXG4uY2lyY2xlIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRmaWx0ZXI6IGJsdXIoOTBweCk7XG5cdGFzcGVjdC1yYXRpbzogMSAvIDE7XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcblx0ei1pbmRleDogeignY2lyY2xlcycpO1xuXHRAaW5jbHVkZSBtZWRpYSgnPHRhYmxldCcpIHtcblx0XHRkaXNwbGF5OiBub25lO1xuXHR9XG59XG5cbi5jaXJjbGUuY2lyY2xlLS1iYWdlIHtcblx0YmFja2dyb3VuZC1jb2xvcjogJGZhd247XG5cdHdpZHRoOiAzOHJlbTtcblx0dG9wOiA0My43cmVtO1xuXHRyaWdodDogNDAuNXJlbTtcbn1cblxuLmNpcmNsZS5jaXJjbGUtLWdyZXkge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleS1jaGF0ZWF1O1xuXHR3aWR0aDogMjVyZW07XG5cdHRvcDogMjJyZW07XG5cdGxlZnQ6IDIyLjlyZW07XG59XG5cbi5ob21lX19oZXJvLFxuLmhvbWVfX2Fib3V0IHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR6LWluZGV4OiB6KCdjb250ZW50Jyk7XG5cdG1hcmdpbi1sZWZ0OiAyOHJlbTtcblxuXHRAaW5jbHVkZSBtZWRpYSgnPHRhYmxldCcpIHtcblx0XHRtYXJnaW4tbGVmdDogN3JlbTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0bWFyZ2luLWxlZnQ6IDIuM3JlbTtcblx0fVxufVxuXG4uaG9tZV9fdGl0bGUge1xuXHRtYXJnaW4tYm90dG9tOiAyMS44cmVtO1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHQvLyBnYXA6IDIuOHJlbTtcblx0QGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcblx0XHRtYXJnaW4tYm90dG9tOiA0cmVtO1xuXHRcdGdhcDogMS40cmVtO1xuXHR9XG5cblx0LnRpdGxlX19pdGVtX19zcGFuIHtcblx0XHRtYXJnaW4tYm90dG9tOiAxNHB4O1xuXHR9XG5cblx0LnRpdGxlX19pdGVtIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGdhcDogNnJlbTtcblx0XHRhbGlnbi1pdGVtczogZmxleC1lbmQ7XG5cblx0XHQmX190ZXh0IHtcblx0XHRcdGxpbmUtaGVpZ2h0OiAwLjgzO1xuXHRcdH1cblxuXHRcdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0XHQmX19zcGFuIHtcblx0XHRcdFx0dmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdFx0XHRvcGFjaXR5OiAwO1xuXHRcdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG4ucGhvbmVfX2Rlc2NyaXB0aW9uX19jb250YWluZXIge1xuXHRkaXNwbGF5OiBub25lO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LXdyYXA6IHdyYXA7XG5cdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblx0XHRnYXA6IDJyZW07XG5cdFx0Y29sdW1uLWdhcDogNC4ycmVtO1xuXHRcdG1hcmdpbi1ib3R0b206IDZyZW07XG5cdH1cbn1cblxuLmhvbWVfX3Njcm9sbF9fc3ZnIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRyaWdodDogMy42cmVtO1xuXHRib3R0b206IDA7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGdhcDogMS44NXJlbTtcblxuXHRAaW5jbHVkZSBtZWRpYSgnPHRhYmxldCcpIHtcblx0XHR3aWR0aDogMTByZW07XG5cdFx0Z2FwOiAwO1xuXG5cdFx0LnNjcm9sbF9fc3ZnX19pbm5lciB7XG5cdFx0XHR3aWR0aDogM3JlbTtcblx0XHR9XG5cblx0XHQuc2Nyb2xsX19zdmdfX291dGVyIHtcblx0XHRcdHdpZHRoOiAxMnJlbTtcblx0XHR9XG5cblx0XHQuc2Nyb2xsX19zdmdfX2Fycm93IHtcblx0XHRcdHdpZHRoOiA2cmVtO1xuXHRcdH1cblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0d2lkdGg6IGF1dG87XG5cdFx0cmlnaHQ6IDIuM3JlbTtcblxuXHRcdC5zY3JvbGxfX3N2Z19faW5uZXIge1xuXHRcdFx0d2lkdGg6IDJyZW07XG5cdFx0fVxuXG5cdFx0LnNjcm9sbF9fc3ZnX19vdXRlciB7XG5cdFx0XHR3aWR0aDogNnJlbTtcblx0XHR9XG5cblx0XHQuc2Nyb2xsX19zdmdfX2Fycm93IHtcblx0XHRcdHdpZHRoOiAzcmVtO1xuXHRcdH1cblx0fVxufVxuXG4uc2Nyb2xsX19zdmdfX2NvbnRhaW5lcixcbi5zY3JvbGxfX3N2Z19fYXJyb3csXG4ubmF2aWdhdGVfX3N2Z19fY29udGFpbmVyLFxuLm5hdmlnYXRlX190b19fc3ZnIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnNjcm9sbF9fc3ZnX19pbm5lcixcbi5zY3JvbGxfX3N2Z19fb3V0ZXIsXG4uc2Nyb2xsX19zdmdfX2Fycm93IHtcblx0d2lkdGg6IDEwMCU7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubmF2aWdhdGVfX3RvX19zdmcge1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG5cdGdhcDogMS44NXJlbTtcblx0Y3Vyc29yOiBwb2ludGVyO1xuXG5cdEBleHRlbmQgJW5hdmlnYXRlX19ob3Zlcjtcbn1cblxuLnNjcm9sbF9fc3ZnX19pbm5lcixcbi5uYXZpZ2F0ZV9fc3ZnX19pbm5lciB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLnNjcm9sbF9fc3ZnX19vdXRlcixcbi5uYXZpZ2F0ZV9fc3ZnX19vdXRlciB7XG5cdHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5ob21lX19hYm91dCB7XG5cdC5ob21lX19hYm91dF9fZGVzY3JpcHRpb24ge1xuXHRcdG1hcmdpbi1ibG9jazogNHJlbSAzcmVtO1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0Z2FwOiA0LjJyZW07XG5cblx0XHRAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHR9XG5cdH1cbn1cblxuLmhvbWVfX3NlbGVjdGVkX193b3JrcyB7XG5cdG1hcmdpbi1sZWZ0OiAxMS42cmVtO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8dGFibGV0Jykge1xuXHRcdG1hcmdpbi1sZWZ0OiA3cmVtO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEoJzxwaG9uZScpIHtcblx0XHRtYXJnaW4tbGVmdDogMi4zcmVtO1xuXHR9XG5cblx0LnNlbGVjdGVkX193b3Jrc19faGVhZGVyIHtcblx0XHRtYXJnaW4tYmxvY2s6IDE1LjhyZW0gOXJlbTtcblx0XHRtYXJnaW4taW5saW5lOiBhdXRvO1xuXHRcdHBhZGRpbmctcmlnaHQ6IDExLjZyZW07XG5cdFx0d2lkdGg6IDgzJTtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdGdhcDogMTAuMnJlbTtcblx0XHRAaW5jbHVkZSBtZWRpYSgnPHBob25lJykge1xuXHRcdFx0cGFkZGluZy1yaWdodDogMi4zcmVtO1xuXHRcdFx0Z2FwOiA1cmVtO1xuXHRcdH1cblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG5cdFx0c3BhbiB7XG5cdFx0XHRoZWlnaHQ6IDAuMDdyZW07XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0fVxuXG5cdFx0QGluY2x1ZGUgbWVkaWEoJzx0YWJsZXQnKSB7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHR9XG5cdH1cblxuXHQuc2VsZWN0ZWRfX3dvcmtzX193cmFwcGVyIHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRcdGdhcDogMi44cmVtO1xuXG5cdFx0LnNlbGVjdGVkX193b3Jrc19faXRlbSB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdFx0XHRhbGlnbi1pdGVtczogZmxleC1lbmQ7XG5cdFx0XHRnYXA6IDEuNXJlbTtcblx0XHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMC43NXMgZWFzZS1vdXQ7XG5cdFx0XHQtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC43NXMgZWFzZS1vdXQ7XG5cdFx0XHQtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC43NXMgZWFzZS1vdXQ7XG5cdFx0XHQtbXMtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjc1cyBlYXNlLW91dDtcblx0XHRcdC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC43NXMgZWFzZS1vdXQ7XG5cdFx0XHQmOm50aC1jaGlsZChvZGQpIHtcblx0XHRcdFx0ZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuXHRcdFx0fVxuXG5cdFx0XHQuc2VsZWN0ZWRfX3dvcmtzX190aXRsZSB7XG5cdFx0XHRcdGxpbmUtaGVpZ2h0OiAwLjgzO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG4uaG9tZV9fY29udGFjdCB7XG5cdG1hcmdpbi1ibG9jazogMTcuNHJlbSA4LjFyZW07XG5cdG1hcmdpbi1pbmxpbmU6IDExLjZyZW07XG5cblx0QGluY2x1ZGUgbWVkaWEoJzx0YWJsZXQnKSB7XG5cdFx0bWFyZ2luLWlubGluZTogN3JlbTtcblx0fVxuXG5cdGRpc3BsYXk6IGZsZXg7XG5cdC8vIGdhcDogMjNyZW07XG5cdGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcblx0YWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuXG5cdEBpbmNsdWRlIG1lZGlhKCc8cGhvbmUnKSB7XG5cdFx0bWFyZ2luLWlubGluZTogMi4zcmVtO1xuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcblx0XHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcblx0fVxuXG5cdCZfX2ltYWdlIHtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IDQ4LjVyZW07XG5cdH1cblxuXHQuaG9tZV9fY29udGFjdF9fdGV4dCB7XG5cdFx0cGFkZGluZy1ibG9jazogM3JlbSA1cmVtO1xuXHR9XG5cblx0LnNlcnZpY2VzX19saXN0IHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0bWFyZ2luLWJsb2NrOiAycmVtIDNyZW07XG5cdH1cblxuXHQuc2VydmljZXNfX2NvbnRhaW5lciB7XG5cdFx0QGV4dGVuZCAlbmF2aWdhdGVfX2hvdmVyO1xuXHR9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/