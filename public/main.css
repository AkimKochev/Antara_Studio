/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

span {
  font-size: 1.3rem;
  line-height: 1.29;
}
@media (max-width: 1023px) {
  span {
    font-size: 1.7rem;
  }
}
@media (max-width: 767px) {
  span {
    font-size: 1.3rem;
  }
}

p,
a {
  font-size: 1.9rem;
  line-height: 1.28;
}
@media (max-width: 1023px) {
  p,
a {
    font-size: 2.3rem;
  }
}
@media (min-width: 1025px) {
  p,
a {
    font-size: 18px;
  }
}
@media (max-width: 767px) {
  p,
a {
    font-size: 1.3rem;
  }
}

.footer .footer__contact, h1 {
  font-size: 15rem;
  line-height: 1.04;
}
@media (max-width: 1023px) {
  .footer .footer__contact, h1 {
    font-size: 18rem;
  }
}
@media (max-width: 767px) {
  .footer .footer__contact, h1 {
    font-size: 5.5rem;
  }
}

h2 {
  font-size: 5.7rem;
  line-height: 1.04;
}
@media (max-width: 1023px) {
  h2 {
    font-size: 6.8rem;
  }
}
@media (max-width: 767px) {
  h2 {
    font-size: 2.5rem;
  }
}

h3,
h4 {
  font-size: 2.8rem;
  line-height: 1.04;
}
@media (max-width: 767px) {
  h3,
h4 {
    font-size: 1.8rem;
  }
}

@font-face {
  font-family: "Noto Sans";
  src: url(032f3ccf2ab0daa327fe.ttf);
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Kara";
  src: url(d59df781ed5aa5438e87.ttf);
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 0.6944444444vw;
  text-rendering: optimizeLegibility;
}
@media (max-width: 767px) {
  html {
    font-size: 2.3696682464vw;
  }
}

html,
body {
  height: 100%;
  width: 100%;
  background-color: #f5f5f5;
}

::-webkit-scrollbar {
  display: none;
  width: 0;
}

::selection {
  color: #979797;
}

ul,
menu {
  list-style: none;
  display: flex;
  align-items: center;
}

a {
  text-decoration: none;
  color: #000;
}

h1 {
  font-family: "Noto Sans";
}

h2 {
  font-family: "Noto Sans";
}

h3,
h4 {
  font-family: "Noto Sans";
}

p,
a {
  font-family: "Kara";
}

span {
  font-family: "Kara";
}

.navigation .navigation__item__link:not(.btn--cto a) {
  position: relative;
}
.navigation .navigation__item__link:not(.btn--cto a)::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  background-color: #000;
  width: 100%;
  height: 0.1rem;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease-out;
}
.navigation .navigation__item__link:hover:not(.btn--cto a)::before {
  transform: scaleX(1);
  transform-origin: left;
}

.navigate__to__svg .navigate__svg__outer, .home__contact .services__container .navigate__svg__outer,
.navigate__to__svg .line--offser,
.home__contact .services__container .line--offser {
  transition: transform 0.45s ease-out;
}
.navigate__to__svg .line--offset, .home__contact .services__container .line--offset {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
}
.navigate__to__svg:hover .navigate__svg__outer, .home__contact .services__container:hover .navigate__svg__outer {
  transform: rotate(45deg);
}
.navigate__to__svg:hover .line--offset, .home__contact .services__container:hover .line--offset {
  stroke-dashoffset: 10;
}

.navigation {
  display: flex;
  gap: 3.1rem;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  margin-bottom: 12.4rem;
  padding-block: 34px 0;
  padding-inline: 11.8rem;
}
@media (max-width: 767px) {
  .navigation {
    padding-inline: 2.3rem;
  }
}
.navigation__container {
  gap: 3.1rem;
}
.navigation .navigation__item__link {
  text-transform: uppercase;
}
.navigation .navigation__item.btn--cto {
  padding: 0.5rem 1.8rem;
  cursor: pointer;
}
.navigation .btn__cto__container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.navigation .btn__cto__container svg {
  position: absolute;
  height: 135%;
}
@media (max-width: 767px) {
  .navigation .navigation__menu__wrapper {
    display: none;
  }
}

.footer {
  background-color: #000;
  padding-block: 6rem 3rem;
  padding-left: 11.5rem;
  color: #fff;
}
@media (max-width: 1023px) {
  .footer {
    padding-left: 7rem;
  }
}
.footer .footer__text {
  text-transform: uppercase;
}
.footer .footer__contact {
  color: #fff;
  font-family: "Noto Sans";
  position: relative;
  display: inline-block;
  margin-block: 6rem 5rem;
  transition: color 0.45s ease-out;
}
.footer .footer__contact:hover {
  color: rgba(255, 255, 255, 0.65);
}
.footer .footer__contact::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0.3rem;
  background-color: rgba(255, 255, 255, 0.65);
}

.circle {
  position: absolute;
  filter: blur(90px);
  aspect-ratio: 1/1;
  border-radius: 50%;
  z-index: 2;
}
@media (max-width: 1023px) {
  .circle {
    display: none;
  }
}

.circle.circle--bage {
  background-color: #cfb47c;
  width: 38rem;
  top: 43.7rem;
  right: 40.5rem;
}

.circle.circle--grey {
  background-color: #a7a7a7;
  width: 25rem;
  top: 22rem;
  left: 22.9rem;
}

.home__hero,
.home__about {
  position: relative;
  z-index: 3;
  margin-left: 22.85rem;
}
@media (max-width: 1023px) {
  .home__hero,
.home__about {
    margin-left: 7rem;
  }
}
@media (max-width: 767px) {
  .home__hero,
.home__about {
    margin-left: 2.3rem;
  }
}

.home__title {
  margin-bottom: 21.8rem;
  display: flex;
  flex-direction: column;
  gap: 2.8rem;
}
@media (max-width: 767px) {
  .home__title {
    margin-bottom: 4rem;
    gap: 1.4rem;
  }
}
.home__title .title__item {
  display: flex;
  gap: 6rem;
  align-items: flex-end;
}
.home__title .title__item__text {
  line-height: 0.83;
}
@media (max-width: 767px) {
  .home__title .title__item__span {
    visibility: hidden;
    opacity: 0;
    display: none;
  }
}

.phone__description__container {
  display: none;
}
@media (max-width: 767px) {
  .phone__description__container {
    display: flex;
    flex-wrap: wrap;
    white-space: nowrap;
    gap: 2rem;
    column-gap: 4.2rem;
    margin-bottom: 6rem;
  }
}

.home__scroll__svg {
  position: absolute;
  right: 3.6rem;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.85rem;
}
@media (max-width: 1023px) {
  .home__scroll__svg {
    width: 10rem;
    gap: 0;
  }
  .home__scroll__svg .scroll__svg__inner {
    width: 3rem;
  }
  .home__scroll__svg .scroll__svg__outer {
    width: 12rem;
  }
  .home__scroll__svg .scroll__svg__arrow {
    width: 6rem;
  }
}
@media (max-width: 767px) {
  .home__scroll__svg {
    width: auto;
    right: 2.3rem;
  }
  .home__scroll__svg .scroll__svg__inner {
    width: 2rem;
  }
  .home__scroll__svg .scroll__svg__outer {
    width: 6rem;
  }
  .home__scroll__svg .scroll__svg__arrow {
    width: 3rem;
  }
}

.scroll__svg__container,
.scroll__svg__arrow,
.navigate__svg__container,
.navigate__to__svg {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.scroll__svg__inner,
.scroll__svg__outer,
.scroll__svg__arrow {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.navigate__to__svg {
  justify-content: flex-start;
  gap: 1.85rem;
  cursor: pointer;
}

.scroll__svg__inner,
.navigate__svg__inner {
  position: absolute;
}

.scroll__svg__outer,
.navigate__svg__outer {
  transform-origin: center;
  display: flex;
  align-items: center;
  justify-content: center;
}

.home__about .home__about__description {
  margin-block: 4rem 3rem;
  display: flex;
  gap: 4.2rem;
}
@media (max-width: 767px) {
  .home__about .home__about__description {
    flex-direction: column;
  }
}

.home__selected__works {
  margin-left: 11.6rem;
}
@media (max-width: 1023px) {
  .home__selected__works {
    margin-left: 7rem;
  }
}
@media (max-width: 767px) {
  .home__selected__works {
    margin-left: 2.3rem;
  }
}
.home__selected__works .selected__works__header {
  margin-block: 15.8rem 9rem;
  margin-inline: auto;
  padding-right: 11.6rem;
  width: 83%;
  display: flex;
  gap: 10.2rem;
  justify-content: space-between;
  align-items: center;
  white-space: nowrap;
}
@media (max-width: 767px) {
  .home__selected__works .selected__works__header {
    padding-right: 2.3rem;
    gap: 5rem;
  }
}
.home__selected__works .selected__works__header span {
  height: 0.07rem;
  background-color: #000;
  width: 100%;
}
@media (max-width: 1023px) {
  .home__selected__works .selected__works__header {
    width: 100%;
  }
}
.home__selected__works .selected__works__wrapper {
  display: inline-flex;
  flex-direction: column;
  gap: 2.8rem;
}
.home__selected__works .selected__works__wrapper .selected__works__item {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  gap: 1.5rem;
}
.home__selected__works .selected__works__wrapper .selected__works__item:nth-child(odd) {
  flex-direction: row-reverse;
}
.home__selected__works .selected__works__wrapper .selected__works__item .selected__works__title {
  line-height: 0.83;
}

.home__contact {
  margin-block: 17.4rem 8.1rem;
  margin-inline: 11.6rem;
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}
@media (max-width: 1023px) {
  .home__contact {
    margin-inline: 7rem;
  }
}
@media (max-width: 767px) {
  .home__contact {
    margin-inline: 2.3rem;
    flex-direction: column-reverse;
    align-items: flex-start;
  }
}
.home__contact__image {
  width: 100%;
  max-width: 48.5rem;
}
.home__contact .home__contact__text {
  padding-block: 3rem 5rem;
}
.home__contact .services__list {
  display: inline-block;
  margin-block: 2rem 3rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/